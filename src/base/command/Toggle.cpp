//$Header$
//------------------------------------------------------------------------------
//                                  Toggle
//------------------------------------------------------------------------------
// GMAT: Goddard Mission Analysis Tool.
//
// Author: Darrel J. Conway
// Created: 2003/mm/dd
//
// Developed jointly by NASA/GSFC and Thinking Systems, Inc. under contract
// number S-67573-G
//
/**
 * Insert descriptive text here.
 *
 * @note Any notes here.
 */
//------------------------------------------------------------------------------




// Class automatically generated by Dev-C++ New Class wizard

#include "Toggle.hpp" // class's header file
#include "Publisher.hpp"

// class constructor
Toggle::Toggle() :
    Command         ("Toggle"),
    subscriberID    (parameterCount)
{
	++parameterCount;
}

// class destructor
Toggle::~Toggle()
{
	// insert your code here
}


Toggle::Toggle(const Toggle& t) :
    Command         (t),
    subscriberID    (t.subscriberID)
{
    parameterCount = t.parameterCount;
}


Toggle& Toggle::operator=(const Toggle& t)
{
    return *this;
}


bool Toggle::Execute(void)
{
    char data[] = "Toggle executed\n\n";
    publisher->Publish(data, strlen(data));
    return true;
}


std::string Toggle::GetParameterText(const Integer id) const
{
    if (id == subscriberID)
        return "Subscriber";
    return Command::GetParameterText(id);
}


Integer Toggle::GetParameterID(const std::string &str) const
{
    if (str == "Subscriber")
        return subscriberID;
    return Command::GetParameterID(str);
}


Gmat::ParameterType Toggle::GetParameterType(const Integer id) const
{
    if (id == subscriberID)
        return Gmat::STRING_TYPE;
    return Command::GetParameterType(id);
}


std::string Toggle::GetParameterTypeString(const Integer id) const
{
    if (id == subscriberID)
        return PARAM_TYPE_STRING[Gmat::STRING_TYPE];
    return Command::GetParameterTypeString(id);
}


std::string Toggle::GetStringParameter(const Integer id) const
{
    if (id == subscriberID)
        return "List of subscribers";
    return Command::GetStringParameter(id);
}


bool Toggle::SetStringParameter(const Integer id, const std::string &value)
{
    if (id == subscriberID) {
        if (find(subNames.begin(), subNames.end(), value) == subNames.end()) {
            subNames.push_back(value);
            return true;
        }
        return false;
    }
    return Command::SetStringParameter(id, value);
}

