//------------------------------------------------------------------------------
//                                  Inverse
//------------------------------------------------------------------------------
// GMAT: Goddard Mission Analysis Tool
//
// **Legal**
//
// Developed jointly by NASA/GSFC and Thinking Systems, Inc. under contract
// number S-67573-G
//
// Author: Allison Greene
// Created: 2006/04/20
//
/**
 * Implements Inverse class.
 */
//------------------------------------------------------------------------------

#include "Inverse.hpp"
#include "MessageInterface.hpp"

//---------------------------------
// public methods
//---------------------------------

//------------------------------------------------------------------------------
// Inverse()
//------------------------------------------------------------------------------
/**
 * Constructor.
 */
//------------------------------------------------------------------------------
Inverse::Inverse(const std::string &nomme)
   : MathFunction("", nomme)
{
}


//------------------------------------------------------------------------------
// ~Inverse()
//------------------------------------------------------------------------------
/**
 * Destructor.
 */
//------------------------------------------------------------------------------
Inverse::~Inverse()
{
}


//------------------------------------------------------------------------------
//  Inverse(const Inverse &copy)
//------------------------------------------------------------------------------
/**
 * Constructs the Inverse object (copy constructor).
 * 
 * @param <copy> Object that is copied
 */
//------------------------------------------------------------------------------
Inverse::Inverse(const Inverse &copy) :
   MathFunction      (copy)
{
}


//------------------------------------------------------------------------------
//  GmatBase* Clone() const
//------------------------------------------------------------------------------
/**
 * Clone of the Inverse operation.
 *
 * @return clone of the Inverse operation.
 *
 */
//------------------------------------------------------------------------------
GmatBase* Inverse::Clone() const
{
   return (new Inverse(*this));
}

//------------------------------------------------------------------------------
// Rmatrix MatrixEvaluate()
//------------------------------------------------------------------------------
/**
 * @return the product of left and right nodes
 *
 */
//------------------------------------------------------------------------------
Rmatrix Inverse::MatrixEvaluate()
{
   return (leftNode->MatrixEvaluate()).Inverse();
}


