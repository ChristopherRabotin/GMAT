###############################################################################
# Project:    GMAT
# Module:     inc.mac for base directory 
# Created:    Joey Gurgnaus 
# Date:       2003/11/18
# Modified:   2004/01/14 - added burn directory and compiler option -Wall
#             2004/09/23 - W. Shoan - added function directory
#             2004/09/24 - J. Gurganus - cleaned up and added 'testing' target 
#             2005/07/19 - J. Gurganus - added Fortan compiler (g77) 
#             2005/10/13 - J. Gurganus - added target for non-matlab 
#             2005/10/17 - J. Gurganus - corrected 'testing' problem
###############################################################################
#
# Program to make (library)
LIBDIR = $(PROJECT_ROOT)/lib
LIB = $(LIBDIR)/libgmatbase.a
#
#
# Define macros for the base directory
BURN       = $(PROJECT_ROOT)/base/burn
COMMAND    = $(PROJECT_ROOT)/base/command
CONFIGS    = $(PROJECT_ROOT)/base/configs
COORDSYS   = $(PROJECT_ROOT)/base/coordsystem
INCLUDE    = $(PROJECT_ROOT)/base/include
EXECUTIVE  = $(PROJECT_ROOT)/base/executive
FACTORY    = $(PROJECT_ROOT)/base/factory
FOUNDATION = $(PROJECT_ROOT)/base/foundation
FORCEMODEL = $(PROJECT_ROOT)/base/forcemodel
FUNCTION   = $(PROJECT_ROOT)/base/function
INTERFACE  = $(PROJECT_ROOT)/base/interface
INTERPOL   = $(PROJECT_ROOT)/base/interpolator
INTERPRET  = $(PROJECT_ROOT)/base/interpreter
PARAM      = $(PROJECT_ROOT)/base/parameter
PROPAG     = $(PROJECT_ROOT)/base/propagator
REFFRAME   = $(PROJECT_ROOT)/base/refframe
SOLARSYS   = $(PROJECT_ROOT)/base/solarsys
SOLVER     = $(PROJECT_ROOT)/base/solver
SPACECRAFT = $(PROJECT_ROOT)/base/spacecraft
STOPCOND   = $(PROJECT_ROOT)/base/stopcond
SUBSCRIBER = $(PROJECT_ROOT)/base/subscriber
UTIL       = $(PROJECT_ROOT)/base/util

INCS = -I$(BURN) -I$(COMMAND) -I$(CONFIGS) -I$(COORDSYS) -I$(EXECUTIVE) -I$(FACTORY) \
	-I$(FORCEMODEL) -I$(FOUNDATION) -I$(FUNCTION) -I$(INCLUDE) \
	-I$(INTERFACE) -I$(INTERPOL) -I$(INTERPRET) \
	-I$(PARAM) -I$(PROPAG) -I$(REFFRAME) -I$(SOLARSYS) -I$(SOLVER) \
	-I$(SPACECRAFT) -I$(STOPCOND) -I$(SUBSCRIBER) -I$(UTIL)
	
# Object modules for library
OBJ = $(SRC:.cpp=.o)
#
# Fortran source file(s)
OBJ += $(FOR_SRC:.for=.o)
#
CXXFLAGS = $(INCS) $(TESTFLAGS) $(MATLABFLAGS) -dynamic -Wall
CPP = g++ $(CXXFLAGS)
#
# Fortran compiler
G77 = g77
#
# Default suffix rule
.SUFFIXES: .o .cpp .for
#
###############################################################################
# Target definitions
#
all: $(LIB)

$(LIB): $(OBJ) 
	@if [ ! -x $(LIBDIR) ]; then mkdir $(LIBDIR); echo 'Creating $(LIBDIR)'; fi
	ar cr $@ $(OBJ)
	@ranlib $@
	@chmod -R 755 $(LIBDIR)

.cpp.o:
	$(CPP) -c $<

.for.o:
	$(G77) -c $<

clean:
	rm -f $(OBJ) core

bare: clean
	rm -f $(LIB)

testing:
	${MAKE} -f Makefile.mac "TESTFLAGS = -D__CONSOLE_APP__" "MATLABFLAGS ="

non-matlab:
	${MAKE} -f Makefile.mac "MATLABFLAGS = "
#	${MAKE} -f Makefile.mac "CXXFLAGS = $(INCS) $(TESTFLAGS) -dynamic -Wall"
