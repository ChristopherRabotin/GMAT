# Makefile.in generated by automake 1.7.9 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/glib
pkglibdir = $(libdir)/glib
pkgincludedir = $(includedir)/glib
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = aarch64-unknown-linux-gnu
ACLOCAL = ${SHELL} /home/rb/glib-2.9.6/missing --run aclocal-1.7
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/rb/glib-2.9.6/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/rb/glib-2.9.6/missing --run autoconf
AUTOHEADER = ${SHELL} /home/rb/glib-2.9.6/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rb/glib-2.9.6/missing --run automake-1.7
AWK = mawk
CATALOGS =  am.gmo ar.gmo az.gmo be.gmo bg.gmo bn.gmo bs.gmo ca.gmo cs.gmo cy.gmo da.gmo de.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo id.gmo is.gmo it.gmo ja.gmo ko.gmo ku.gmo lt.gmo lv.gmo mk.gmo ml.gmo mn.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo no.gmo or.gmo pa.gmo pl.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@Latn.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS =  -pthread
CROSS_COMPILING_FALSE = 
CROSS_COMPILING_TRUE = #
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_MEM_POOLS = 
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
ENABLE_MAN_FALSE = 
ENABLE_MAN_TRUE = #
ENABLE_TIMELOOP_FALSE = #
ENABLE_TIMELOOP_TRUE = 
EXEEXT = 
F77 = 
FFLAGS = 
GETTEXT_PACKAGE = glib20
GIO = giounix.lo
GLIBC21 = yes
GLIB_BINARY_AGE = 906
GLIB_DEBUG_FLAGS = -DG_ENABLE_DEBUG
GLIB_DEF = 
GLIB_GENMARSHAL = 
GLIB_INTERFACE_AGE = 4
GLIB_MAJOR_VERSION = 2
GLIB_MICRO_VERSION = 6
GLIB_MINOR_VERSION = 9
GLIB_VERSION = 2.9.6
GMODULE_DEF = 
GMOFILES =  am.gmo ar.gmo az.gmo be.gmo bg.gmo bn.gmo bs.gmo ca.gmo cs.gmo cy.gmo da.gmo de.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo id.gmo is.gmo it.gmo ja.gmo ko.gmo ku.gmo lt.gmo lv.gmo mk.gmo ml.gmo mn.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo no.gmo or.gmo pa.gmo pl.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@Latn.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GOBJECT_DEF = 
GSPAWN = gspawn.lo
GTHREAD_COMPILE_IMPL_DEFINES = -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE
GTHREAD_DEF = 
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
G_LIBS_EXTRA = 
G_MODULE_BROKEN_RTLD_GLOBAL = 0
G_MODULE_HAVE_DLERROR = 1
G_MODULE_IMPL = G_MODULE_IMPL_DL
G_MODULE_LDFLAGS = -Wl,--export-dynamic
G_MODULE_LIBS = -ldl
G_MODULE_LIBS_EXTRA = 
G_MODULE_NEED_USCORE = 0
G_MODULE_PLUGIN_LIBS = 
G_MODULE_SUPPORTED = true
G_THREAD_CFLAGS = -pthread
G_THREAD_LIBS = -pthread 
G_THREAD_LIBS_EXTRA = 
G_THREAD_LIBS_FOR_GTHREAD = -lpthread
HAVE_CXX_FALSE = #
HAVE_CXX_TRUE = 
HAVE_GNUC_VISIBILITY_FALSE = #
HAVE_GNUC_VISIBILITY_TRUE = 
HAVE_GOOD_PRINTF_FALSE = #
HAVE_GOOD_PRINTF_TRUE = 
HTML_DIR = ${datadir}/gtk-doc/html
ICONV_LIBS = 
INDENT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 902
LT_CURRENT = 902
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 2.9
LT_REVISION = 4
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/rb/glib-2.9.6/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MS_LIB_AVAILABLE_FALSE = 
MS_LIB_AVAILABLE_TRUE = #
NM = /usr/bin/nm -B
OBJDUMP = objdump
OBJEXT = o
OS_LINUX_FALSE = #
OS_LINUX_TRUE = 
OS_UNIX_FALSE = #
OS_UNIX_TRUE = 
OS_WIN32_FALSE = 
OS_WIN32_TRUE = #
PACKAGE = glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = glib
PACKAGE_STRING = glib 2.9.6
PACKAGE_TARNAME = glib
PACKAGE_VERSION = 2.9.6
PATH_SEPARATOR = :
PERL = perl
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PLATFORMDEP = 
PLATFORM_WIN32_FALSE = 
PLATFORM_WIN32_TRUE = #
POFILES =  am.po ar.po az.po be.po bg.po bn.po bs.po ca.po cs.po cy.po da.po de.po el.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po id.po is.po it.po ja.po ko.po ku.po lt.po lv.po mk.po ml.po mn.po ms.po nb.po ne.po nl.po nn.po no.po or.po pa.po pl.po pt.po pt_BR.po ro.po ru.po rw.po sk.po sl.po sq.po sr.po sr@Latn.po sr@ije.po sv.po ta.po te.po th.po tl.po tr.po tt.po uk.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
REBUILD = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TESTGMODULE_EXP = 
USE_NLS = yes
VERSION = 2.9.6
WINDRES = 
XGETTEXT = /usr/bin/xgettext
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
ac_ct_AR = ar
ac_ct_AS = 
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DLLTOOL = 
ac_ct_F77 = 
ac_ct_NM = 
ac_ct_OBJDUMP = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_ct_WINDRES = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = aarch64-unknown-linux-gnu
build_alias = aarch64-unknown-linux-gnu
build_cpu = aarch64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = aarch64-unknown-linux-gnu
host_alias = 
host_cpu = aarch64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/rb/glib-2.9.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
ms_librarian = 
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = gobject refcount

INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/glib -I$(top_srcdir)/gmodule $(GLIB_DEBUG_FLAGS)

EFENCE = 

libglib = $(top_builddir)/glib/libglib-2.0.la
libgthread = $(top_builddir)/gthread/libgthread-2.0.la
libgmodule = $(top_builddir)/gmodule/libgmodule-2.0.la
libgobject = $(top_builddir)/gobject/libgobject-2.0.la

#libadd_libgmodule = $(libgmodule)
#libadd_libglib = $(libglib)
#no_undefined = -no-undefined

#module_test_exp = module-test.exp

#spawn_test_win32_gui = spawn-test-win32-gui

#spawn_test_win32_gui_LDFLAGS = -mwindows

EXTRA_DIST = \
	$(test_scripts)				\
	makefile.msc.in				\
	casefold.txt				\
	casemap.txt				\
	gen-casefold-txt.pl			\
	gen-casemap-txt.pl			\
	iochannel-test-infile			\
	utf8.txt


BUILT_EXTRA_DIST = \
	makefile.msc

#CXX_TEST = 

CXX_TEST = cxx-test
cxx_test_LDADD = $(progs_ldadd)
cxx_test_SOURCES = cxx-test.C

timeloop = timeloop timeloop-closure
noinst_PROGRAMS = testglib testgdate testgdateparser unicode-normalize unicode-collate $(timeloop)
testglib_LDADD = $(libglib)
patterntest_LDADD = $(libglib)
testgdate_LDADD = $(libglib)
testgdateparser_LDADD = $(libglib)
unicode_normalize_LDADD = $(libglib)
timeloop_LDADD = $(libglib)
timeloop_closure_LDADD = $(libglib) $(libgobject)

test_programs = \
	atomic-test				\
	array-test				\
	$(CXX_TEST)				\
	child-test				\
	completion-test				\
	convert-test				\
	date-test				\
	dirname-test				\
	file-test				\
	env-test				\
	gio-test				\
	hash-test				\
	iochannel-test				\
	keyfile-test				\
	list-test				\
	mainloop-test				\
	mapping-test				\
	markup-escape-test			\
	module-test				\
	node-test				\
	option-test				\
	patterntest				\
	printf-test				\
	queue-test				\
	asyncqueue-test				\
	qsort-test				\
	rand-test				\
	relation-test				\
	shell-test				\
	slist-test				\
	slice-test				\
	slice-color				\
	spawn-test				\
	$(spawn_test_win32_gui)			\
	strfunc-test				\
	string-test				\
	strtod-test				\
	thread-test				\
	threadpool-test				\
	tree-test				\
	type-test				\
	unicode-caseconv			\
	unicode-encoding			\
	utf8-validate				\
	utf8-pointer				\
	uri-test


test_scripts = run-markup-tests.sh run-collate-tests.sh

test_script_support_programs = markup-test unicode-collate

check_PROGRAMS = $(test_programs) $(test_script_support_programs)

TESTS = $(test_programs) $(test_scripts)
TESTS_ENVIRONMENT = srcdir=$(srcdir) \
	LIBCHARSET_ALIAS_DIR=$(top_builddir)/glib/libcharset \
	MALLOC_CHECK_=2	\
	MALLOC_PERTURB_=$$(($$RANDOM % 256))


progs_ldadd = $(EFENCE) $(libglib) $(EFENCE)
thread_ldadd = $(libgthread) $(G_THREAD_LIBS) $(progs_ldadd)
module_ldadd = $(libgmodule) $(G_MODULE_LIBS) $(progs_ldadd)

atomic_test_LDADD = $(progs_ldadd)
array_test_LDADD = $(progs_ldadd)
child_test_LDADD = $(thread_ldadd)
completion_test_LDADD = $(progs_ldadd)
convert_test_LDADD = $(progs_ldadd)
date_test_LDADD = $(progs_ldadd)
dirname_test_LDADD = $(progs_ldadd)
file_test_LDADD = $(progs_ldadd)
env_test_LDADD = $(progs_ldadd)
gio_test_LDADD = $(progs_ldadd)
hash_test_LDADD = $(progs_ldadd)
iochannel_test_LDADD = $(progs_ldadd)
keyfile_test_LDADD = $(progs_ldadd)
list_test_LDADD = $(progs_ldadd)
mainloop_test_LDADD = $(thread_ldadd)
markup_test_LDADD = $(progs_ldadd)
mapping_test_LDADD = $(progs_ldadd)
markup_escape_test_LDADD = $(progs_ldadd)
module_test_LDADD = $(module_ldadd) $(module_test_exp)
module_test_LDFLAGS = $(G_MODULE_LDFLAGS)
node_test_LDADD = $(progs_ldadd)
option_test_LDADD = $(progs_ldadd)
printf_test_LDADD = $(progs_ldadd)
queue_test_LDADD = $(progs_ldadd)
asyncqueue_test_LDADD = $(thread_ldadd)
qsort_test_LDADD = $(progs_ldadd)
rand_test_LDADD = $(progs_ldadd)
relation_test_LDADD = $(progs_ldadd)
shell_test_LDADD = $(progs_ldadd)
slist_test_LDADD = $(progs_ldadd)
slice_test_SOURCES = slice-test.c memchunks.c
slice_test_LDADD = $(thread_ldadd)
slice_color_SOURCES = slice-color.c memchunks.c
slice_color_LDADD = $(thread_ldadd)
spawn_test_LDADD = $(progs_ldadd)
strfunc_test_LDADD = $(progs_ldadd)
string_test_LDADD = $(progs_ldadd)
strtod_test_LDADD = $(progs_ldadd) -lm
thread_test_LDADD = $(thread_ldadd)
threadpool_test_LDADD = $(thread_ldadd)
tree_test_LDADD = $(progs_ldadd)
type_test_LDADD = $(progs_ldadd)
unicode_encoding_LDADD = $(progs_ldadd)
unicode_caseconv_LDADD = $(progs_ldadd)
unicode_collate_LDADD = $(progs_ldadd)
utf8_validate_LDADD = $(progs_ldadd)
utf8_pointer_LDADD = $(progs_ldadd)
uri_test_LDADD = $(progs_ldadd)

lib_LTLIBRARIES = libmoduletestplugin_a.la libmoduletestplugin_b.la

libmoduletestplugin_a_la_SOURCES = libmoduletestplugin_a.c
libmoduletestplugin_a_la_LDFLAGS = $(G_MODULE_LDFLAGS) -avoid-version -module $(no_undefined) -rpath $(libdir)
libmoduletestplugin_a_la_LIBADD = $(G_MODULE_LIBS) $(libadd_libgmodule) $(libadd_libglib)

libmoduletestplugin_b_la_SOURCES = libmoduletestplugin_b.c
libmoduletestplugin_b_la_LDFLAGS = $(G_MODULE_LDFLAGS) -avoid-version -module $(no_undefined) -rpath $(libdir)
libmoduletestplugin_b_la_LIBADD = $(G_MODULE_LIBS) $(libadd_libgmodule) $(libadd_libglib)

DISTCLEANFILES = iochannel-test-outfile \
		file-test-get-contents \
		maptest \
		mapchild \
		collate.out

subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = makefile.msc
LTLIBRARIES = $(lib_LTLIBRARIES)

#libmoduletestplugin_a_la_DEPENDENCIES = \
#	$(top_builddir)/gmodule/libgmodule-2.0.la \
#	$(top_builddir)/glib/libglib-2.0.la
libmoduletestplugin_a_la_DEPENDENCIES =
am_libmoduletestplugin_a_la_OBJECTS = libmoduletestplugin_a.lo
libmoduletestplugin_a_la_OBJECTS = \
	$(am_libmoduletestplugin_a_la_OBJECTS)
#libmoduletestplugin_b_la_DEPENDENCIES = \
#	$(top_builddir)/gmodule/libgmodule-2.0.la \
#	$(top_builddir)/glib/libglib-2.0.la
libmoduletestplugin_b_la_DEPENDENCIES =
am_libmoduletestplugin_b_la_OBJECTS = libmoduletestplugin_b.lo
libmoduletestplugin_b_la_OBJECTS = \
	$(am_libmoduletestplugin_b_la_OBJECTS)
##check_PROGRAMS = \
##	atomic-test$(EXEEXT) \
##	array-test$(EXEEXT) \
##	child-test$(EXEEXT) \
##	completion-test$(EXEEXT) \
##	convert-test$(EXEEXT) \
##	date-test$(EXEEXT) \
##	dirname-test$(EXEEXT) \
##	file-test$(EXEEXT) \
##	env-test$(EXEEXT) \
##	gio-test$(EXEEXT) \
##	hash-test$(EXEEXT) \
##	iochannel-test$(EXEEXT) \
##	keyfile-test$(EXEEXT) \
##	list-test$(EXEEXT) \
##	mainloop-test$(EXEEXT) \
##	mapping-test$(EXEEXT) \
##	markup-escape-test$(EXEEXT) \
##	module-test$(EXEEXT) \
##	node-test$(EXEEXT) \
##	option-test$(EXEEXT) \
##	patterntest$(EXEEXT) \
##	printf-test$(EXEEXT) \
##	queue-test$(EXEEXT) \
##	asyncqueue-test$(EXEEXT) \
##	qsort-test$(EXEEXT) \
##	rand-test$(EXEEXT) \
##	relation-test$(EXEEXT) \
##	shell-test$(EXEEXT) \
##	slist-test$(EXEEXT) \
##	slice-test$(EXEEXT) \
##	slice-color$(EXEEXT) \
##	spawn-test$(EXEEXT) \
##	spawn-test-win32-gui$(EXEEXT) \
##	strfunc-test$(EXEEXT) \
##	string-test$(EXEEXT) \
##	strtod-test$(EXEEXT) \
##	thread-test$(EXEEXT) \
##	threadpool-test$(EXEEXT) \
##	tree-test$(EXEEXT) \
##	type-test$(EXEEXT) \
##	unicode-caseconv$(EXEEXT) \
##	unicode-encoding$(EXEEXT) \
##	utf8-validate$(EXEEXT) \
##	utf8-pointer$(EXEEXT) \
##	uri-test$(EXEEXT) \
##	markup-test$(EXEEXT) \
##	unicode-collate$(EXEEXT)
#check_PROGRAMS = \
#	atomic-test$(EXEEXT) \
#	array-test$(EXEEXT) \
#	child-test$(EXEEXT) \
#	completion-test$(EXEEXT) \
#	convert-test$(EXEEXT) \
#	date-test$(EXEEXT) \
#	dirname-test$(EXEEXT) \
#	file-test$(EXEEXT) \
#	env-test$(EXEEXT) \
#	gio-test$(EXEEXT) \
#	hash-test$(EXEEXT) \
#	iochannel-test$(EXEEXT) \
#	keyfile-test$(EXEEXT) \
#	list-test$(EXEEXT) \
#	mainloop-test$(EXEEXT) \
#	mapping-test$(EXEEXT) \
#	markup-escape-test$(EXEEXT) \
#	module-test$(EXEEXT) \
#	node-test$(EXEEXT) \
#	option-test$(EXEEXT) \
#	patterntest$(EXEEXT) \
#	printf-test$(EXEEXT) \
#	queue-test$(EXEEXT) \
#	asyncqueue-test$(EXEEXT) \
#	qsort-test$(EXEEXT) \
#	rand-test$(EXEEXT) \
#	relation-test$(EXEEXT) \
#	shell-test$(EXEEXT) \
#	slist-test$(EXEEXT) \
#	slice-test$(EXEEXT) \
#	slice-color$(EXEEXT) \
#	spawn-test$(EXEEXT) \
#	strfunc-test$(EXEEXT) \
#	string-test$(EXEEXT) \
#	strtod-test$(EXEEXT) \
#	thread-test$(EXEEXT) \
#	threadpool-test$(EXEEXT) \
#	tree-test$(EXEEXT) \
#	type-test$(EXEEXT) \
#	unicode-caseconv$(EXEEXT) \
#	unicode-encoding$(EXEEXT) \
#	utf8-validate$(EXEEXT) \
#	utf8-pointer$(EXEEXT) \
#	uri-test$(EXEEXT) \
#	markup-test$(EXEEXT) \
#	unicode-collate$(EXEEXT)
#check_PROGRAMS = \
#	atomic-test$(EXEEXT) \
#	array-test$(EXEEXT) \
#	cxx-test$(EXEEXT) \
#	child-test$(EXEEXT) \
#	completion-test$(EXEEXT) \
#	convert-test$(EXEEXT) \
#	date-test$(EXEEXT) \
#	dirname-test$(EXEEXT) \
#	file-test$(EXEEXT) \
#	env-test$(EXEEXT) \
#	gio-test$(EXEEXT) \
#	hash-test$(EXEEXT) \
#	iochannel-test$(EXEEXT) \
#	keyfile-test$(EXEEXT) \
#	list-test$(EXEEXT) \
#	mainloop-test$(EXEEXT) \
#	mapping-test$(EXEEXT) \
#	markup-escape-test$(EXEEXT) \
#	module-test$(EXEEXT) \
#	node-test$(EXEEXT) \
#	option-test$(EXEEXT) \
#	patterntest$(EXEEXT) \
#	printf-test$(EXEEXT) \
#	queue-test$(EXEEXT) \
#	asyncqueue-test$(EXEEXT) \
#	qsort-test$(EXEEXT) \
#	rand-test$(EXEEXT) \
#	relation-test$(EXEEXT) \
#	shell-test$(EXEEXT) \
#	slist-test$(EXEEXT) \
#	slice-test$(EXEEXT) \
#	slice-color$(EXEEXT) \
#	spawn-test$(EXEEXT) \
#	spawn-test-win32-gui$(EXEEXT) \
#	strfunc-test$(EXEEXT) \
#	string-test$(EXEEXT) \
#	strtod-test$(EXEEXT) \
#	thread-test$(EXEEXT) \
#	threadpool-test$(EXEEXT) \
#	tree-test$(EXEEXT) \
#	type-test$(EXEEXT) \
#	unicode-caseconv$(EXEEXT) \
#	unicode-encoding$(EXEEXT) \
#	utf8-validate$(EXEEXT) \
#	utf8-pointer$(EXEEXT) \
#	uri-test$(EXEEXT) \
#	markup-test$(EXEEXT) \
#	unicode-collate$(EXEEXT)
check_PROGRAMS = \
	atomic-test$(EXEEXT) \
	array-test$(EXEEXT) \
	cxx-test$(EXEEXT) \
	child-test$(EXEEXT) \
	completion-test$(EXEEXT) \
	convert-test$(EXEEXT) \
	date-test$(EXEEXT) \
	dirname-test$(EXEEXT) \
	file-test$(EXEEXT) \
	env-test$(EXEEXT) \
	gio-test$(EXEEXT) \
	hash-test$(EXEEXT) \
	iochannel-test$(EXEEXT) \
	keyfile-test$(EXEEXT) \
	list-test$(EXEEXT) \
	mainloop-test$(EXEEXT) \
	mapping-test$(EXEEXT) \
	markup-escape-test$(EXEEXT) \
	module-test$(EXEEXT) \
	node-test$(EXEEXT) \
	option-test$(EXEEXT) \
	patterntest$(EXEEXT) \
	printf-test$(EXEEXT) \
	queue-test$(EXEEXT) \
	asyncqueue-test$(EXEEXT) \
	qsort-test$(EXEEXT) \
	rand-test$(EXEEXT) \
	relation-test$(EXEEXT) \
	shell-test$(EXEEXT) \
	slist-test$(EXEEXT) \
	slice-test$(EXEEXT) \
	slice-color$(EXEEXT) \
	spawn-test$(EXEEXT) \
	strfunc-test$(EXEEXT) \
	string-test$(EXEEXT) \
	strtod-test$(EXEEXT) \
	thread-test$(EXEEXT) \
	threadpool-test$(EXEEXT) \
	tree-test$(EXEEXT) \
	type-test$(EXEEXT) \
	unicode-caseconv$(EXEEXT) \
	unicode-encoding$(EXEEXT) \
	utf8-validate$(EXEEXT) \
	utf8-pointer$(EXEEXT) \
	uri-test$(EXEEXT) \
	markup-test$(EXEEXT) \
	unicode-collate$(EXEEXT)
noinst_PROGRAMS = testglib$(EXEEXT) \
	testgdate$(EXEEXT) \
	testgdateparser$(EXEEXT) \
	unicode-normalize$(EXEEXT) \
	unicode-collate$(EXEEXT) \
	timeloop$(EXEEXT) \
	timeloop-closure$(EXEEXT)
#noinst_PROGRAMS = testglib$(EXEEXT) \
#	testgdate$(EXEEXT) \
#	testgdateparser$(EXEEXT) \
#	unicode-normalize$(EXEEXT) \
#	unicode-collate$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

array_test_SOURCES = array-test.c
array_test_OBJECTS = array-test.$(OBJEXT)
array_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
array_test_LDFLAGS =
asyncqueue_test_SOURCES = asyncqueue-test.c
asyncqueue_test_OBJECTS = asyncqueue-test.$(OBJEXT)
asyncqueue_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
asyncqueue_test_LDFLAGS =
atomic_test_SOURCES = atomic-test.c
atomic_test_OBJECTS = atomic-test.$(OBJEXT)
atomic_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
atomic_test_LDFLAGS =
child_test_SOURCES = child-test.c
child_test_OBJECTS = child-test.$(OBJEXT)
child_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
child_test_LDFLAGS =
completion_test_SOURCES = completion-test.c
completion_test_OBJECTS = completion-test.$(OBJEXT)
completion_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
completion_test_LDFLAGS =
convert_test_SOURCES = convert-test.c
convert_test_OBJECTS = convert-test.$(OBJEXT)
convert_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
convert_test_LDFLAGS =
am__cxx_test_SOURCES_DIST = cxx-test.C
am_cxx_test_OBJECTS = cxx-test.$(OBJEXT)
cxx_test_OBJECTS = $(am_cxx_test_OBJECTS)
cxx_test_DEPENDENCIES = \
	$(top_builddir)/glib/libglib-2.0.la
#cxx_test_DEPENDENCIES =
cxx_test_LDFLAGS =
date_test_SOURCES = date-test.c
date_test_OBJECTS = date-test.$(OBJEXT)
date_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
date_test_LDFLAGS =
dirname_test_SOURCES = dirname-test.c
dirname_test_OBJECTS = dirname-test.$(OBJEXT)
dirname_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
dirname_test_LDFLAGS =
env_test_SOURCES = env-test.c
env_test_OBJECTS = env-test.$(OBJEXT)
env_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
env_test_LDFLAGS =
file_test_SOURCES = file-test.c
file_test_OBJECTS = file-test.$(OBJEXT)
file_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
file_test_LDFLAGS =
gio_test_SOURCES = gio-test.c
gio_test_OBJECTS = gio-test.$(OBJEXT)
gio_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
gio_test_LDFLAGS =
hash_test_SOURCES = hash-test.c
hash_test_OBJECTS = hash-test.$(OBJEXT)
hash_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
hash_test_LDFLAGS =
iochannel_test_SOURCES = iochannel-test.c
iochannel_test_OBJECTS = iochannel-test.$(OBJEXT)
iochannel_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
iochannel_test_LDFLAGS =
keyfile_test_SOURCES = keyfile-test.c
keyfile_test_OBJECTS = keyfile-test.$(OBJEXT)
keyfile_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
keyfile_test_LDFLAGS =
list_test_SOURCES = list-test.c
list_test_OBJECTS = list-test.$(OBJEXT)
list_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
list_test_LDFLAGS =
mainloop_test_SOURCES = mainloop-test.c
mainloop_test_OBJECTS = mainloop-test.$(OBJEXT)
mainloop_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
mainloop_test_LDFLAGS =
mapping_test_SOURCES = mapping-test.c
mapping_test_OBJECTS = mapping-test.$(OBJEXT)
mapping_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
mapping_test_LDFLAGS =
markup_escape_test_SOURCES = markup-escape-test.c
markup_escape_test_OBJECTS = markup-escape-test.$(OBJEXT)
markup_escape_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_escape_test_LDFLAGS =
markup_test_SOURCES = markup-test.c
markup_test_OBJECTS = markup-test.$(OBJEXT)
markup_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_test_LDFLAGS =
module_test_SOURCES = module-test.c
module_test_OBJECTS = module-test.$(OBJEXT)
#module_test_DEPENDENCIES = \
#	$(top_builddir)/gmodule/libgmodule-2.0.la \
#	$(top_builddir)/glib/libglib-2.0.la \
#	module-test.exp
module_test_DEPENDENCIES = \
	$(top_builddir)/gmodule/libgmodule-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
node_test_SOURCES = node-test.c
node_test_OBJECTS = node-test.$(OBJEXT)
node_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
node_test_LDFLAGS =
option_test_SOURCES = option-test.c
option_test_OBJECTS = option-test.$(OBJEXT)
option_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
option_test_LDFLAGS =
patterntest_SOURCES = patterntest.c
patterntest_OBJECTS = patterntest.$(OBJEXT)
patterntest_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
patterntest_LDFLAGS =
printf_test_SOURCES = printf-test.c
printf_test_OBJECTS = printf-test.$(OBJEXT)
printf_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
printf_test_LDFLAGS =
qsort_test_SOURCES = qsort-test.c
qsort_test_OBJECTS = qsort-test.$(OBJEXT)
qsort_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
qsort_test_LDFLAGS =
queue_test_SOURCES = queue-test.c
queue_test_OBJECTS = queue-test.$(OBJEXT)
queue_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
queue_test_LDFLAGS =
rand_test_SOURCES = rand-test.c
rand_test_OBJECTS = rand-test.$(OBJEXT)
rand_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
rand_test_LDFLAGS =
relation_test_SOURCES = relation-test.c
relation_test_OBJECTS = relation-test.$(OBJEXT)
relation_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
relation_test_LDFLAGS =
shell_test_SOURCES = shell-test.c
shell_test_OBJECTS = shell-test.$(OBJEXT)
shell_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
shell_test_LDFLAGS =
am_slice_color_OBJECTS = slice-color.$(OBJEXT) memchunks.$(OBJEXT)
slice_color_OBJECTS = $(am_slice_color_OBJECTS)
slice_color_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
slice_color_LDFLAGS =
am_slice_test_OBJECTS = slice-test.$(OBJEXT) memchunks.$(OBJEXT)
slice_test_OBJECTS = $(am_slice_test_OBJECTS)
slice_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
slice_test_LDFLAGS =
slist_test_SOURCES = slist-test.c
slist_test_OBJECTS = slist-test.$(OBJEXT)
slist_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
slist_test_LDFLAGS =
spawn_test_SOURCES = spawn-test.c
spawn_test_OBJECTS = spawn-test.$(OBJEXT)
spawn_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
spawn_test_LDFLAGS =
spawn_test_win32_gui_SOURCES = spawn-test-win32-gui.c
spawn_test_win32_gui_OBJECTS = spawn-test-win32-gui.$(OBJEXT)
spawn_test_win32_gui_LDADD = $(LDADD)
spawn_test_win32_gui_DEPENDENCIES =
strfunc_test_SOURCES = strfunc-test.c
strfunc_test_OBJECTS = strfunc-test.$(OBJEXT)
strfunc_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
strfunc_test_LDFLAGS =
string_test_SOURCES = string-test.c
string_test_OBJECTS = string-test.$(OBJEXT)
string_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
string_test_LDFLAGS =
strtod_test_SOURCES = strtod-test.c
strtod_test_OBJECTS = strtod-test.$(OBJEXT)
strtod_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
strtod_test_LDFLAGS =
testgdate_SOURCES = testgdate.c
testgdate_OBJECTS = testgdate.$(OBJEXT)
testgdate_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
testgdate_LDFLAGS =
testgdateparser_SOURCES = testgdateparser.c
testgdateparser_OBJECTS = testgdateparser.$(OBJEXT)
testgdateparser_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
testgdateparser_LDFLAGS =
testglib_SOURCES = testglib.c
testglib_OBJECTS = testglib.$(OBJEXT)
testglib_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
testglib_LDFLAGS =
thread_test_SOURCES = thread-test.c
thread_test_OBJECTS = thread-test.$(OBJEXT)
thread_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
thread_test_LDFLAGS =
threadpool_test_SOURCES = threadpool-test.c
threadpool_test_OBJECTS = threadpool-test.$(OBJEXT)
threadpool_test_DEPENDENCIES = $(top_builddir)/gthread/libgthread-2.0.la \
	$(top_builddir)/glib/libglib-2.0.la
threadpool_test_LDFLAGS =
timeloop_SOURCES = timeloop.c
timeloop_OBJECTS = timeloop.$(OBJEXT)
timeloop_DEPENDENCIES = \
	$(top_builddir)/glib/libglib-2.0.la
#timeloop_DEPENDENCIES =
timeloop_LDFLAGS =
timeloop_closure_SOURCES = timeloop-closure.c
timeloop_closure_OBJECTS = timeloop-closure.$(OBJEXT)
timeloop_closure_DEPENDENCIES = \
	$(top_builddir)/glib/libglib-2.0.la \
	$(top_builddir)/gobject/libgobject-2.0.la
#timeloop_closure_DEPENDENCIES =
timeloop_closure_LDFLAGS =
tree_test_SOURCES = tree-test.c
tree_test_OBJECTS = tree-test.$(OBJEXT)
tree_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
tree_test_LDFLAGS =
type_test_SOURCES = type-test.c
type_test_OBJECTS = type-test.$(OBJEXT)
type_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
type_test_LDFLAGS =
unicode_caseconv_SOURCES = unicode-caseconv.c
unicode_caseconv_OBJECTS = unicode-caseconv.$(OBJEXT)
unicode_caseconv_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unicode_caseconv_LDFLAGS =
unicode_collate_SOURCES = unicode-collate.c
unicode_collate_OBJECTS = unicode-collate.$(OBJEXT)
unicode_collate_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unicode_collate_LDFLAGS =
unicode_encoding_SOURCES = unicode-encoding.c
unicode_encoding_OBJECTS = unicode-encoding.$(OBJEXT)
unicode_encoding_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unicode_encoding_LDFLAGS =
unicode_normalize_SOURCES = unicode-normalize.c
unicode_normalize_OBJECTS = unicode-normalize.$(OBJEXT)
unicode_normalize_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unicode_normalize_LDFLAGS =
uri_test_SOURCES = uri-test.c
uri_test_OBJECTS = uri-test.$(OBJEXT)
uri_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
uri_test_LDFLAGS =
utf8_pointer_SOURCES = utf8-pointer.c
utf8_pointer_OBJECTS = utf8-pointer.$(OBJEXT)
utf8_pointer_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_pointer_LDFLAGS =
utf8_validate_SOURCES = utf8-validate.c
utf8_validate_OBJECTS = utf8-validate.$(OBJEXT)
utf8_validate_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_validate_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/array-test.Po \
	./$(DEPDIR)/asyncqueue-test.Po \
	./$(DEPDIR)/atomic-test.Po \
	./$(DEPDIR)/child-test.Po \
	./$(DEPDIR)/completion-test.Po \
	./$(DEPDIR)/convert-test.Po ./$(DEPDIR)/cxx-test.Po \
	./$(DEPDIR)/date-test.Po \
	./$(DEPDIR)/dirname-test.Po ./$(DEPDIR)/env-test.Po \
	./$(DEPDIR)/file-test.Po ./$(DEPDIR)/gio-test.Po \
	./$(DEPDIR)/hash-test.Po \
	./$(DEPDIR)/iochannel-test.Po \
	./$(DEPDIR)/keyfile-test.Po \
	./$(DEPDIR)/libmoduletestplugin_a.Plo \
	./$(DEPDIR)/libmoduletestplugin_b.Plo \
	./$(DEPDIR)/list-test.Po \
	./$(DEPDIR)/mainloop-test.Po \
	./$(DEPDIR)/mapping-test.Po \
	./$(DEPDIR)/markup-escape-test.Po \
	./$(DEPDIR)/markup-test.Po ./$(DEPDIR)/memchunks.Po \
	./$(DEPDIR)/module-test.Po ./$(DEPDIR)/node-test.Po \
	./$(DEPDIR)/option-test.Po \
	./$(DEPDIR)/patterntest.Po \
	./$(DEPDIR)/printf-test.Po \
	./$(DEPDIR)/qsort-test.Po ./$(DEPDIR)/queue-test.Po \
	./$(DEPDIR)/rand-test.Po \
	./$(DEPDIR)/relation-test.Po \
	./$(DEPDIR)/shell-test.Po \
	./$(DEPDIR)/slice-color.Po \
	./$(DEPDIR)/slice-test.Po ./$(DEPDIR)/slist-test.Po \
	./$(DEPDIR)/spawn-test-win32-gui.Po \
	./$(DEPDIR)/spawn-test.Po \
	./$(DEPDIR)/strfunc-test.Po \
	./$(DEPDIR)/string-test.Po \
	./$(DEPDIR)/strtod-test.Po ./$(DEPDIR)/testgdate.Po \
	./$(DEPDIR)/testgdateparser.Po \
	./$(DEPDIR)/testglib.Po ./$(DEPDIR)/thread-test.Po \
	./$(DEPDIR)/threadpool-test.Po \
	./$(DEPDIR)/timeloop-closure.Po \
	./$(DEPDIR)/timeloop.Po ./$(DEPDIR)/tree-test.Po \
	./$(DEPDIR)/type-test.Po \
	./$(DEPDIR)/unicode-caseconv.Po \
	./$(DEPDIR)/unicode-collate.Po \
	./$(DEPDIR)/unicode-encoding.Po \
	./$(DEPDIR)/unicode-normalize.Po \
	./$(DEPDIR)/uri-test.Po ./$(DEPDIR)/utf8-pointer.Po \
	./$(DEPDIR)/utf8-validate.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libmoduletestplugin_a_la_SOURCES) \
	$(libmoduletestplugin_b_la_SOURCES) array-test.c \
	asyncqueue-test.c atomic-test.c child-test.c completion-test.c \
	convert-test.c $(am__cxx_test_SOURCES_DIST) date-test.c \
	dirname-test.c env-test.c file-test.c gio-test.c hash-test.c \
	iochannel-test.c keyfile-test.c list-test.c mainloop-test.c \
	mapping-test.c markup-escape-test.c markup-test.c module-test.c \
	node-test.c option-test.c patterntest.c printf-test.c \
	qsort-test.c queue-test.c rand-test.c relation-test.c \
	shell-test.c $(slice_color_SOURCES) $(slice_test_SOURCES) \
	slist-test.c spawn-test.c spawn-test-win32-gui.c strfunc-test.c \
	string-test.c strtod-test.c testgdate.c testgdateparser.c \
	testglib.c thread-test.c threadpool-test.c timeloop.c \
	timeloop-closure.c tree-test.c type-test.c unicode-caseconv.c \
	unicode-collate.c unicode-encoding.c unicode-normalize.c \
	uri-test.c utf8-pointer.c utf8-validate.c

RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am makefile.msc.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libmoduletestplugin_a_la_SOURCES) $(libmoduletestplugin_b_la_SOURCES) array-test.c asyncqueue-test.c atomic-test.c child-test.c completion-test.c convert-test.c $(cxx_test_SOURCES) date-test.c dirname-test.c env-test.c file-test.c gio-test.c hash-test.c iochannel-test.c keyfile-test.c list-test.c mainloop-test.c mapping-test.c markup-escape-test.c markup-test.c module-test.c node-test.c option-test.c patterntest.c printf-test.c qsort-test.c queue-test.c rand-test.c relation-test.c shell-test.c $(slice_color_SOURCES) $(slice_test_SOURCES) slist-test.c spawn-test.c spawn-test-win32-gui.c strfunc-test.c string-test.c strtod-test.c testgdate.c testgdateparser.c testglib.c thread-test.c threadpool-test.c timeloop.c timeloop-closure.c tree-test.c type-test.c unicode-caseconv.c unicode-collate.c unicode-encoding.c unicode-normalize.c uri-test.c utf8-pointer.c utf8-validate.c

all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .c .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
makefile.msc: $(top_builddir)/config.status makefile.msc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libLTLIBRARIES_INSTALL = $(INSTALL)

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmoduletestplugin_a.la: $(libmoduletestplugin_a_la_OBJECTS) $(libmoduletestplugin_a_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libmoduletestplugin_a_la_LDFLAGS) $(libmoduletestplugin_a_la_OBJECTS) $(libmoduletestplugin_a_la_LIBADD) $(LIBS)
libmoduletestplugin_b.la: $(libmoduletestplugin_b_la_OBJECTS) $(libmoduletestplugin_b_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libmoduletestplugin_b_la_LDFLAGS) $(libmoduletestplugin_b_la_OBJECTS) $(libmoduletestplugin_b_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
array-test$(EXEEXT): $(array_test_OBJECTS) $(array_test_DEPENDENCIES) 
	@rm -f array-test$(EXEEXT)
	$(LINK) $(array_test_LDFLAGS) $(array_test_OBJECTS) $(array_test_LDADD) $(LIBS)
asyncqueue-test$(EXEEXT): $(asyncqueue_test_OBJECTS) $(asyncqueue_test_DEPENDENCIES) 
	@rm -f asyncqueue-test$(EXEEXT)
	$(LINK) $(asyncqueue_test_LDFLAGS) $(asyncqueue_test_OBJECTS) $(asyncqueue_test_LDADD) $(LIBS)
atomic-test$(EXEEXT): $(atomic_test_OBJECTS) $(atomic_test_DEPENDENCIES) 
	@rm -f atomic-test$(EXEEXT)
	$(LINK) $(atomic_test_LDFLAGS) $(atomic_test_OBJECTS) $(atomic_test_LDADD) $(LIBS)
child-test$(EXEEXT): $(child_test_OBJECTS) $(child_test_DEPENDENCIES) 
	@rm -f child-test$(EXEEXT)
	$(LINK) $(child_test_LDFLAGS) $(child_test_OBJECTS) $(child_test_LDADD) $(LIBS)
completion-test$(EXEEXT): $(completion_test_OBJECTS) $(completion_test_DEPENDENCIES) 
	@rm -f completion-test$(EXEEXT)
	$(LINK) $(completion_test_LDFLAGS) $(completion_test_OBJECTS) $(completion_test_LDADD) $(LIBS)
convert-test$(EXEEXT): $(convert_test_OBJECTS) $(convert_test_DEPENDENCIES) 
	@rm -f convert-test$(EXEEXT)
	$(LINK) $(convert_test_LDFLAGS) $(convert_test_OBJECTS) $(convert_test_LDADD) $(LIBS)
cxx-test$(EXEEXT): $(cxx_test_OBJECTS) $(cxx_test_DEPENDENCIES) 
	@rm -f cxx-test$(EXEEXT)
	$(CXXLINK) $(cxx_test_LDFLAGS) $(cxx_test_OBJECTS) $(cxx_test_LDADD) $(LIBS)
date-test$(EXEEXT): $(date_test_OBJECTS) $(date_test_DEPENDENCIES) 
	@rm -f date-test$(EXEEXT)
	$(LINK) $(date_test_LDFLAGS) $(date_test_OBJECTS) $(date_test_LDADD) $(LIBS)
dirname-test$(EXEEXT): $(dirname_test_OBJECTS) $(dirname_test_DEPENDENCIES) 
	@rm -f dirname-test$(EXEEXT)
	$(LINK) $(dirname_test_LDFLAGS) $(dirname_test_OBJECTS) $(dirname_test_LDADD) $(LIBS)
env-test$(EXEEXT): $(env_test_OBJECTS) $(env_test_DEPENDENCIES) 
	@rm -f env-test$(EXEEXT)
	$(LINK) $(env_test_LDFLAGS) $(env_test_OBJECTS) $(env_test_LDADD) $(LIBS)
file-test$(EXEEXT): $(file_test_OBJECTS) $(file_test_DEPENDENCIES) 
	@rm -f file-test$(EXEEXT)
	$(LINK) $(file_test_LDFLAGS) $(file_test_OBJECTS) $(file_test_LDADD) $(LIBS)
gio-test$(EXEEXT): $(gio_test_OBJECTS) $(gio_test_DEPENDENCIES) 
	@rm -f gio-test$(EXEEXT)
	$(LINK) $(gio_test_LDFLAGS) $(gio_test_OBJECTS) $(gio_test_LDADD) $(LIBS)
hash-test$(EXEEXT): $(hash_test_OBJECTS) $(hash_test_DEPENDENCIES) 
	@rm -f hash-test$(EXEEXT)
	$(LINK) $(hash_test_LDFLAGS) $(hash_test_OBJECTS) $(hash_test_LDADD) $(LIBS)
iochannel-test$(EXEEXT): $(iochannel_test_OBJECTS) $(iochannel_test_DEPENDENCIES) 
	@rm -f iochannel-test$(EXEEXT)
	$(LINK) $(iochannel_test_LDFLAGS) $(iochannel_test_OBJECTS) $(iochannel_test_LDADD) $(LIBS)
keyfile-test$(EXEEXT): $(keyfile_test_OBJECTS) $(keyfile_test_DEPENDENCIES) 
	@rm -f keyfile-test$(EXEEXT)
	$(LINK) $(keyfile_test_LDFLAGS) $(keyfile_test_OBJECTS) $(keyfile_test_LDADD) $(LIBS)
list-test$(EXEEXT): $(list_test_OBJECTS) $(list_test_DEPENDENCIES) 
	@rm -f list-test$(EXEEXT)
	$(LINK) $(list_test_LDFLAGS) $(list_test_OBJECTS) $(list_test_LDADD) $(LIBS)
mainloop-test$(EXEEXT): $(mainloop_test_OBJECTS) $(mainloop_test_DEPENDENCIES) 
	@rm -f mainloop-test$(EXEEXT)
	$(LINK) $(mainloop_test_LDFLAGS) $(mainloop_test_OBJECTS) $(mainloop_test_LDADD) $(LIBS)
mapping-test$(EXEEXT): $(mapping_test_OBJECTS) $(mapping_test_DEPENDENCIES) 
	@rm -f mapping-test$(EXEEXT)
	$(LINK) $(mapping_test_LDFLAGS) $(mapping_test_OBJECTS) $(mapping_test_LDADD) $(LIBS)
markup-escape-test$(EXEEXT): $(markup_escape_test_OBJECTS) $(markup_escape_test_DEPENDENCIES) 
	@rm -f markup-escape-test$(EXEEXT)
	$(LINK) $(markup_escape_test_LDFLAGS) $(markup_escape_test_OBJECTS) $(markup_escape_test_LDADD) $(LIBS)
markup-test$(EXEEXT): $(markup_test_OBJECTS) $(markup_test_DEPENDENCIES) 
	@rm -f markup-test$(EXEEXT)
	$(LINK) $(markup_test_LDFLAGS) $(markup_test_OBJECTS) $(markup_test_LDADD) $(LIBS)
module-test$(EXEEXT): $(module_test_OBJECTS) $(module_test_DEPENDENCIES) 
	@rm -f module-test$(EXEEXT)
	$(LINK) $(module_test_LDFLAGS) $(module_test_OBJECTS) $(module_test_LDADD) $(LIBS)
node-test$(EXEEXT): $(node_test_OBJECTS) $(node_test_DEPENDENCIES) 
	@rm -f node-test$(EXEEXT)
	$(LINK) $(node_test_LDFLAGS) $(node_test_OBJECTS) $(node_test_LDADD) $(LIBS)
option-test$(EXEEXT): $(option_test_OBJECTS) $(option_test_DEPENDENCIES) 
	@rm -f option-test$(EXEEXT)
	$(LINK) $(option_test_LDFLAGS) $(option_test_OBJECTS) $(option_test_LDADD) $(LIBS)
patterntest$(EXEEXT): $(patterntest_OBJECTS) $(patterntest_DEPENDENCIES) 
	@rm -f patterntest$(EXEEXT)
	$(LINK) $(patterntest_LDFLAGS) $(patterntest_OBJECTS) $(patterntest_LDADD) $(LIBS)
printf-test$(EXEEXT): $(printf_test_OBJECTS) $(printf_test_DEPENDENCIES) 
	@rm -f printf-test$(EXEEXT)
	$(LINK) $(printf_test_LDFLAGS) $(printf_test_OBJECTS) $(printf_test_LDADD) $(LIBS)
qsort-test$(EXEEXT): $(qsort_test_OBJECTS) $(qsort_test_DEPENDENCIES) 
	@rm -f qsort-test$(EXEEXT)
	$(LINK) $(qsort_test_LDFLAGS) $(qsort_test_OBJECTS) $(qsort_test_LDADD) $(LIBS)
queue-test$(EXEEXT): $(queue_test_OBJECTS) $(queue_test_DEPENDENCIES) 
	@rm -f queue-test$(EXEEXT)
	$(LINK) $(queue_test_LDFLAGS) $(queue_test_OBJECTS) $(queue_test_LDADD) $(LIBS)
rand-test$(EXEEXT): $(rand_test_OBJECTS) $(rand_test_DEPENDENCIES) 
	@rm -f rand-test$(EXEEXT)
	$(LINK) $(rand_test_LDFLAGS) $(rand_test_OBJECTS) $(rand_test_LDADD) $(LIBS)
relation-test$(EXEEXT): $(relation_test_OBJECTS) $(relation_test_DEPENDENCIES) 
	@rm -f relation-test$(EXEEXT)
	$(LINK) $(relation_test_LDFLAGS) $(relation_test_OBJECTS) $(relation_test_LDADD) $(LIBS)
shell-test$(EXEEXT): $(shell_test_OBJECTS) $(shell_test_DEPENDENCIES) 
	@rm -f shell-test$(EXEEXT)
	$(LINK) $(shell_test_LDFLAGS) $(shell_test_OBJECTS) $(shell_test_LDADD) $(LIBS)
slice-color$(EXEEXT): $(slice_color_OBJECTS) $(slice_color_DEPENDENCIES) 
	@rm -f slice-color$(EXEEXT)
	$(LINK) $(slice_color_LDFLAGS) $(slice_color_OBJECTS) $(slice_color_LDADD) $(LIBS)
slice-test$(EXEEXT): $(slice_test_OBJECTS) $(slice_test_DEPENDENCIES) 
	@rm -f slice-test$(EXEEXT)
	$(LINK) $(slice_test_LDFLAGS) $(slice_test_OBJECTS) $(slice_test_LDADD) $(LIBS)
slist-test$(EXEEXT): $(slist_test_OBJECTS) $(slist_test_DEPENDENCIES) 
	@rm -f slist-test$(EXEEXT)
	$(LINK) $(slist_test_LDFLAGS) $(slist_test_OBJECTS) $(slist_test_LDADD) $(LIBS)
spawn-test$(EXEEXT): $(spawn_test_OBJECTS) $(spawn_test_DEPENDENCIES) 
	@rm -f spawn-test$(EXEEXT)
	$(LINK) $(spawn_test_LDFLAGS) $(spawn_test_OBJECTS) $(spawn_test_LDADD) $(LIBS)
spawn-test-win32-gui$(EXEEXT): $(spawn_test_win32_gui_OBJECTS) $(spawn_test_win32_gui_DEPENDENCIES) 
	@rm -f spawn-test-win32-gui$(EXEEXT)
	$(LINK) $(spawn_test_win32_gui_LDFLAGS) $(spawn_test_win32_gui_OBJECTS) $(spawn_test_win32_gui_LDADD) $(LIBS)
strfunc-test$(EXEEXT): $(strfunc_test_OBJECTS) $(strfunc_test_DEPENDENCIES) 
	@rm -f strfunc-test$(EXEEXT)
	$(LINK) $(strfunc_test_LDFLAGS) $(strfunc_test_OBJECTS) $(strfunc_test_LDADD) $(LIBS)
string-test$(EXEEXT): $(string_test_OBJECTS) $(string_test_DEPENDENCIES) 
	@rm -f string-test$(EXEEXT)
	$(LINK) $(string_test_LDFLAGS) $(string_test_OBJECTS) $(string_test_LDADD) $(LIBS)
strtod-test$(EXEEXT): $(strtod_test_OBJECTS) $(strtod_test_DEPENDENCIES) 
	@rm -f strtod-test$(EXEEXT)
	$(LINK) $(strtod_test_LDFLAGS) $(strtod_test_OBJECTS) $(strtod_test_LDADD) $(LIBS)
testgdate$(EXEEXT): $(testgdate_OBJECTS) $(testgdate_DEPENDENCIES) 
	@rm -f testgdate$(EXEEXT)
	$(LINK) $(testgdate_LDFLAGS) $(testgdate_OBJECTS) $(testgdate_LDADD) $(LIBS)
testgdateparser$(EXEEXT): $(testgdateparser_OBJECTS) $(testgdateparser_DEPENDENCIES) 
	@rm -f testgdateparser$(EXEEXT)
	$(LINK) $(testgdateparser_LDFLAGS) $(testgdateparser_OBJECTS) $(testgdateparser_LDADD) $(LIBS)
testglib$(EXEEXT): $(testglib_OBJECTS) $(testglib_DEPENDENCIES) 
	@rm -f testglib$(EXEEXT)
	$(LINK) $(testglib_LDFLAGS) $(testglib_OBJECTS) $(testglib_LDADD) $(LIBS)
thread-test$(EXEEXT): $(thread_test_OBJECTS) $(thread_test_DEPENDENCIES) 
	@rm -f thread-test$(EXEEXT)
	$(LINK) $(thread_test_LDFLAGS) $(thread_test_OBJECTS) $(thread_test_LDADD) $(LIBS)
threadpool-test$(EXEEXT): $(threadpool_test_OBJECTS) $(threadpool_test_DEPENDENCIES) 
	@rm -f threadpool-test$(EXEEXT)
	$(LINK) $(threadpool_test_LDFLAGS) $(threadpool_test_OBJECTS) $(threadpool_test_LDADD) $(LIBS)
timeloop$(EXEEXT): $(timeloop_OBJECTS) $(timeloop_DEPENDENCIES) 
	@rm -f timeloop$(EXEEXT)
	$(LINK) $(timeloop_LDFLAGS) $(timeloop_OBJECTS) $(timeloop_LDADD) $(LIBS)
timeloop-closure$(EXEEXT): $(timeloop_closure_OBJECTS) $(timeloop_closure_DEPENDENCIES) 
	@rm -f timeloop-closure$(EXEEXT)
	$(LINK) $(timeloop_closure_LDFLAGS) $(timeloop_closure_OBJECTS) $(timeloop_closure_LDADD) $(LIBS)
tree-test$(EXEEXT): $(tree_test_OBJECTS) $(tree_test_DEPENDENCIES) 
	@rm -f tree-test$(EXEEXT)
	$(LINK) $(tree_test_LDFLAGS) $(tree_test_OBJECTS) $(tree_test_LDADD) $(LIBS)
type-test$(EXEEXT): $(type_test_OBJECTS) $(type_test_DEPENDENCIES) 
	@rm -f type-test$(EXEEXT)
	$(LINK) $(type_test_LDFLAGS) $(type_test_OBJECTS) $(type_test_LDADD) $(LIBS)
unicode-caseconv$(EXEEXT): $(unicode_caseconv_OBJECTS) $(unicode_caseconv_DEPENDENCIES) 
	@rm -f unicode-caseconv$(EXEEXT)
	$(LINK) $(unicode_caseconv_LDFLAGS) $(unicode_caseconv_OBJECTS) $(unicode_caseconv_LDADD) $(LIBS)
unicode-collate$(EXEEXT): $(unicode_collate_OBJECTS) $(unicode_collate_DEPENDENCIES) 
	@rm -f unicode-collate$(EXEEXT)
	$(LINK) $(unicode_collate_LDFLAGS) $(unicode_collate_OBJECTS) $(unicode_collate_LDADD) $(LIBS)
unicode-encoding$(EXEEXT): $(unicode_encoding_OBJECTS) $(unicode_encoding_DEPENDENCIES) 
	@rm -f unicode-encoding$(EXEEXT)
	$(LINK) $(unicode_encoding_LDFLAGS) $(unicode_encoding_OBJECTS) $(unicode_encoding_LDADD) $(LIBS)
unicode-normalize$(EXEEXT): $(unicode_normalize_OBJECTS) $(unicode_normalize_DEPENDENCIES) 
	@rm -f unicode-normalize$(EXEEXT)
	$(LINK) $(unicode_normalize_LDFLAGS) $(unicode_normalize_OBJECTS) $(unicode_normalize_LDADD) $(LIBS)
uri-test$(EXEEXT): $(uri_test_OBJECTS) $(uri_test_DEPENDENCIES) 
	@rm -f uri-test$(EXEEXT)
	$(LINK) $(uri_test_LDFLAGS) $(uri_test_OBJECTS) $(uri_test_LDADD) $(LIBS)
utf8-pointer$(EXEEXT): $(utf8_pointer_OBJECTS) $(utf8_pointer_DEPENDENCIES) 
	@rm -f utf8-pointer$(EXEEXT)
	$(LINK) $(utf8_pointer_LDFLAGS) $(utf8_pointer_OBJECTS) $(utf8_pointer_LDADD) $(LIBS)
utf8-validate$(EXEEXT): $(utf8_validate_OBJECTS) $(utf8_validate_DEPENDENCIES) 
	@rm -f utf8-validate$(EXEEXT)
	$(LINK) $(utf8_validate_LDFLAGS) $(utf8_validate_OBJECTS) $(utf8_validate_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/array-test.Po
include ./$(DEPDIR)/asyncqueue-test.Po
include ./$(DEPDIR)/atomic-test.Po
include ./$(DEPDIR)/child-test.Po
include ./$(DEPDIR)/completion-test.Po
include ./$(DEPDIR)/convert-test.Po
include ./$(DEPDIR)/cxx-test.Po
include ./$(DEPDIR)/date-test.Po
include ./$(DEPDIR)/dirname-test.Po
include ./$(DEPDIR)/env-test.Po
include ./$(DEPDIR)/file-test.Po
include ./$(DEPDIR)/gio-test.Po
include ./$(DEPDIR)/hash-test.Po
include ./$(DEPDIR)/iochannel-test.Po
include ./$(DEPDIR)/keyfile-test.Po
include ./$(DEPDIR)/libmoduletestplugin_a.Plo
include ./$(DEPDIR)/libmoduletestplugin_b.Plo
include ./$(DEPDIR)/list-test.Po
include ./$(DEPDIR)/mainloop-test.Po
include ./$(DEPDIR)/mapping-test.Po
include ./$(DEPDIR)/markup-escape-test.Po
include ./$(DEPDIR)/markup-test.Po
include ./$(DEPDIR)/memchunks.Po
include ./$(DEPDIR)/module-test.Po
include ./$(DEPDIR)/node-test.Po
include ./$(DEPDIR)/option-test.Po
include ./$(DEPDIR)/patterntest.Po
include ./$(DEPDIR)/printf-test.Po
include ./$(DEPDIR)/qsort-test.Po
include ./$(DEPDIR)/queue-test.Po
include ./$(DEPDIR)/rand-test.Po
include ./$(DEPDIR)/relation-test.Po
include ./$(DEPDIR)/shell-test.Po
include ./$(DEPDIR)/slice-color.Po
include ./$(DEPDIR)/slice-test.Po
include ./$(DEPDIR)/slist-test.Po
include ./$(DEPDIR)/spawn-test-win32-gui.Po
include ./$(DEPDIR)/spawn-test.Po
include ./$(DEPDIR)/strfunc-test.Po
include ./$(DEPDIR)/string-test.Po
include ./$(DEPDIR)/strtod-test.Po
include ./$(DEPDIR)/testgdate.Po
include ./$(DEPDIR)/testgdateparser.Po
include ./$(DEPDIR)/testglib.Po
include ./$(DEPDIR)/thread-test.Po
include ./$(DEPDIR)/threadpool-test.Po
include ./$(DEPDIR)/timeloop-closure.Po
include ./$(DEPDIR)/timeloop.Po
include ./$(DEPDIR)/tree-test.Po
include ./$(DEPDIR)/type-test.Po
include ./$(DEPDIR)/unicode-caseconv.Po
include ./$(DEPDIR)/unicode-collate.Po
include ./$(DEPDIR)/unicode-encoding.Po
include ./$(DEPDIR)/unicode-normalize.Po
include ./$(DEPDIR)/uri-test.Po
include ./$(DEPDIR)/utf8-pointer.Po
include ./$(DEPDIR)/utf8-validate.Po

.C.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.C.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.C.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive \
	install-libLTLIBRARIES install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	mostlyclean-recursive pdf pdf-am pdf-recursive ps ps-am \
	ps-recursive tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-info-recursive \
	uninstall-libLTLIBRARIES uninstall-recursive


#module-test.exp: module-test.o
#	dlltool --output-exp module-test.exp module-test.o

# Prevent those libs from being installed
install-libLTLIBRARIES:
	:

dist-hook: $(BUILT_EXTRA_DIST)
	files='$(BUILT_EXTRA_DIST)'; \
	for f in $$files; do \
	  if test -f $$f; then d=.; else d=$(srcdir); fi; \
	  cp $$d/$$f $(distdir) || exit 1; done
	mkdir $(distdir)/markups;          \
	for f in $(srcdir)/markups/* ; do  \
	  cp $$f $(distdir)/markups; done 
	mkdir $(distdir)/collate;          \
	for f in $(srcdir)/collate/* ; do  \
          if test -f $$f; then cp $$f $(distdir)/collate; fi; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
