<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY gobject-GType SYSTEM "xml/gtype.xml">
<!ENTITY gobject-GTypePlugin SYSTEM "xml/gtypeplugin.xml">
<!ENTITY gobject-GTypeModule SYSTEM "xml/gtypemodule.xml">
<!ENTITY gobject-The-Base-Object-Type SYSTEM "xml/objects.xml">
<!ENTITY gobject-Enumeration-and-Flag-Types SYSTEM "xml/enumerations_flags.xml">
<!ENTITY gobject-Boxed-Types SYSTEM "xml/gboxed.xml">
<!ENTITY gobject-Generic-values SYSTEM "xml/generic_values.xml">
<!ENTITY gobject-param-value-types SYSTEM "xml/param_value_types.xml">
<!ENTITY gobject-GParamSpec SYSTEM "xml/gparamspec.xml">
<!ENTITY gobject-Varargs-Value-Collection SYSTEM "xml/value_collection.xml">
<!ENTITY gobject-Signals SYSTEM "xml/signals.xml">
<!ENTITY gobject-Closures SYSTEM "xml/gclosure.xml">
<!ENTITY gobject-Value-Arrays SYSTEM "xml/value_arrays.xml">
<!ENTITY glib-mkenums SYSTEM "glib-mkenums.xml">
<!ENTITY glib-genmarshal SYSTEM "glib-genmarshal.xml">
<!ENTITY gobject-query SYSTEM "gobject-query.xml">
<!ENTITY version SYSTEM "version.xml">

<!ENTITY tutorial-Intro SYSTEM "tut_intro.xml">
<!ENTITY tutorial-GType SYSTEM "tut_gtype.xml">
<!ENTITY tutorial-GObject SYSTEM "tut_gobject.xml">
<!ENTITY tutorial-GSignal SYSTEM "tut_gsignal.xml">
<!ENTITY tutorial-HowTo SYSTEM "tut_howto.xml">
<!ENTITY tutorial-Tools SYSTEM "tut_tools.xml">

]>
<book id="index">
  <bookinfo>
    <title>GObject Reference Manual</title>
    <releaseinfo>for GLib &version;</releaseinfo>
  </bookinfo>

  <preface>
    <title>Introduction</title>
      <para>
			Most modern programming languages come with their own native object
			systems and additional fundamental algorithmic language constructs.
			Just as GLib serves as an implementation of such fundamental
			types and algorithms (linked lists, hash tables and so forth), the
			GLib Object System provides the required implementations of a
			flexible extensible and intentionally easy to map (into other
			languages) object oriented framework for C.
			The substantial elements that are provided can be summarized as:
			<itemizedlist>
				<listitem><para>
					 A generic type system to register arbitrary single-inherited
						flat and deep derived types as well as interfaces for
						structured types.
						It takes care of creation, initialization and memory management
						of the assorted object and class structures, maintains
						parent/child relationships and deals with dynamic implementations
						of such types. That is, their type specific implementations are
						relocatable/unloadable during runtime.
				</para></listitem>
				<listitem><para>
						A collection of fundamental type implementations, such as integers,
						doubles, enums and structured types, to name a few.
				</para></listitem>
				<listitem><para>
						A sample fundamental type implementation to base object hierarchies
						upon - the GObject fundamental type.
				</para></listitem>
				<listitem><para>
						A signal system that allows very flexible user customization of
						virtual/overridable object methods and can serve as a powerful
						notification mechanism.
				</para></listitem>
				<listitem><para>
						An extensible parameter/value system, supporting all the provided
						fundamental types that can be used to generically handle object
						properties or otherwise parameterized types.
				</para></listitem>
			</itemizedlist>
		</para>
  </preface>

  <part label="I">
    <title>Concepts</title>

    &tutorial-Intro;
    &tutorial-GType;
    &tutorial-GObject;
    &tutorial-GSignal;
  </part>
  <reference label="II">
    <title>API Reference</title>
    
      &gobject-GType;
      &gobject-GTypePlugin;
      &gobject-GTypeModule;
      &gobject-The-Base-Object-Type;
      &gobject-Enumeration-and-Flag-Types;
      &gobject-Boxed-Types;
      &gobject-Generic-values;
      &gobject-param-value-types;
      &gobject-Varargs-Value-Collection;
      &gobject-GParamSpec;
      &gobject-Signals;
      &gobject-Closures;
      &gobject-Value-Arrays;
      
  </reference>
  <reference label="III">
    <title>Tools Reference</title>

    &glib-mkenums;
    &glib-genmarshal;
    &gobject-query;
  </reference>
  <part label="IV">
    <title>Tutorial</title>

    &tutorial-HowTo;
  </part>
  <part label="V">
    <title>Related Tools</title>

    &tutorial-Tools;
  </part>

  <index>
    <title>Index</title>
  </index>
  <index role="deprecated">
    <title>Index of deprecated symbols</title>
  </index>
  <index role="2.2">
    <title>Index of new symbols in 2.2</title>
  </index>
  <index role="2.4">
    <title>Index of new symbols in 2.4</title>
  </index>  
  <index role="2.6">
    <title>Index of new symbols in 2.6</title>
  </index>  
  <index role="2.8">
    <title>Index of new symbols in 2.8</title>
  </index>  
  <index role="2.10">
    <title>Index of new symbols in 2.10</title>
  </index>  
  
</book>
