<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xml:id="CallGmatFunction"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:m="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <indexterm>
    <primary>CallGmatFunction</primary>
  </indexterm>

  <refmeta>
    <refentrytitle>CallGmatFunction</refentrytitle>

    <refmiscinfo class="source">GMAT</refmiscinfo>

    <refmiscinfo class="manual">Commands</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>CallGmatFunction</refname>

    <refpurpose>Call a GMAT function</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Script Syntax</title>

    <synopsis><replaceable>GmatFunction</replaceable><literal>()</literal>
<replaceable>GmatFunction</replaceable><literal>(</literal><replaceable>input_argument</replaceable>[<literal>,</literal> <replaceable>input_argument</replaceable>]...<literal>)</literal>
<literal>[</literal><replaceable>output_argument</replaceable>[<literal>,</literal> <replaceable>output_argument</replaceable>]...<literal>]</literal> <literal>=</literal> <replaceable>GmatFunction</replaceable>
<literal>[</literal><replaceable>output_argument</replaceable>[<literal>,</literal> <replaceable>output_argument</replaceable>]...<literal>]</literal> <literal>=</literal> <replaceable>...
    GmatFunction</replaceable><literal>(</literal><replaceable>input_argument</replaceable>[<literal>,</literal> <replaceable>input_argument</replaceable>]...<literal>)</literal></synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>GMAT provides a special command that allows you to call a GMAT
    function which is written via GMAT's <guilabel>GmatFunction</guilabel>
    resource. In the GUI, the GMAT function is called through the
    <guilabel>CallGmatFunction</guilabel> command.</para>

    <para>In the syntax description, <guilabel>GmatFunction</guilabel> is a
    <guilabel>GmatFunction</guilabel> resource that must be declared during
    initialization. Arguments can be passed into the function as inputs and
    returned from the function as outputs. See <xref
    linkend="CallGmatFunction_Remarks" xrefstyle="select:title"/> for details.
    Furthermore, data that is passed into the function as input or received
    from the function as output can also be declared as global by using GMAT's
    <guilabel>Global</guilabel> command. See the <guilabel><xref
    linkend="Global"/></guilabel> reference for more details.</para>

    <para><phrase role="ref_seealso">See Also</phrase>: <xref
    linkend="GmatFunction"/>, <xref linkend="Global"/></para>
  </refsection>

  <refsection>
    <title>GUI</title>

    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata align="center" contentdepth="100%"
                     fileref="files/images/Command_CallGmatFunction_GUI_1.png"
                     scalefit="1" width="100%"/>
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>The <guilabel>CallGmatFunction</guilabel> GUI provides two input
    boxes for input and output arguments and a list to select a GMAt function
    to call.</para>

    <para>The <guilabel>Output</guilabel> box lists all configured output
    argument parameters. These must be selected by clicking
    <guilabel>Edit</guilabel>, which displays a
    <guilabel>ParameterSelectioDialog</guilabel> window. See the <xref
    linkend="CalculationParameters"/> reference for details on how to select a
    parameter.</para>

    <para>The <guilabel>Input</guilabel> box is identical in behavior to
    <guilabel>Output</guilabel>, but lists all configured input arguments to
    the function. Arguments must be selected by clicking
    <guilabel>Edit</guilabel>. The <guilabel>Function</guilabel> list displays
    all functions that have been declared as <guilabel>GmatFunction</guilabel>
    resources in the <guilabel>Resources</guilabel> tree. Select a function
    from the list to call it.</para>

    <para>When the changes are accepted, GMAT does not perform any validation
    of input or output arguments. This validation is performed when the
    mission is actually run.</para>
  </refsection>

  <refsection xml:id="CallGmatFunction_Remarks">
    <title>Remarks</title>

    <para>GMAT objects can be passed into the GMAT function as input and can
    also be returned from the function as output. If a given GMAT object is
    not declared as global in both the main script and inside the GMAT
    function, then all objects that are passed into or received as output from
    the function are considered to be local to that function and the main
    script.</para>

    <para>Below is a list of allowed arguments that can be passed as input to
    the function and received as output from the function. Also see
    <guilabel>GmatFunction</guilabel> resource's <xref
    linkend="GmatFunction_Remarks" xrefstyle="select:title"/> and <xref
    linkend="GmatFunction_Examples" xrefstyle="select:title"/> sections for
    more details and distinct examples that show how to pass objects as inputs
    to the function, perform an operation inside the function, then receive
    objects as outputs from the function.</para>

    <para>The input arguments (<replaceable>input_argument</replaceable>
    values in the syntax description) can be any of the following types:
    <itemizedlist>
        <listitem>
          <para>Any resource objects (e.g. <guilabel>Spacecraft</guilabel>,
          <guilabel>Propagator</guilabel>, <guilabel>DC</guilabel>,
          <guilabel>Optimizers</guilabel>, <guilabel>Impulsive or
          FiniteBurns</guilabel>)</para>
        </listitem>

        <listitem>
          <para>resource parameter of real number type (e.g.
          <guilabel><replaceable>Spacecraft</replaceable>.X</guilabel>)</para>
        </listitem>

        <listitem>
          <para>resource parameter of string type (e.g.
          <guilabel><replaceable>Spacecraft</replaceable>.UTCGregorian</guilabel>)</para>
        </listitem>

        <listitem>
          <para><guilabel>Array</guilabel>, <guilabel>String</guilabel>, or
          <guilabel>Variable</guilabel> resource</para>
        </listitem>
      </itemizedlist></para>

    <para>The output arguments can be any of the following types:
    <itemizedlist>
        <listitem>
          <para>Resource object like <guilabel>Spacecraft</guilabel></para>
        </listitem>

        <listitem>
          <para>resource parameter of real number type (e.g.
          <guilabel><replaceable>Spacecraft</replaceable>.X</guilabel>)</para>
        </listitem>

        <listitem>
          <para>resource parameter of string type (e.g.
          <guilabel><replaceable>Spacecraft</replaceable>.UTCGregorian</guilabel>)</para>
        </listitem>

        <listitem>
          <para><guilabel>Array</guilabel>, <guilabel>String</guilabel>, or
          <guilabel>Variable</guilabel> resource</para>
        </listitem>
      </itemizedlist></para>
  </refsection>

  <refsection xml:id="CallGmatFunction_Examples">
    <title>Examples</title>

    <informalexample>
      <para>Call two different functions. One function performs a simple cross
      product and the second function performs a dot product.</para>

      <programlisting><code>Create ReportFile rf
rf.WriteHeaders = false

Create GmatFunction cross_product
cross_product.FunctionPath = ...
'C:\Users\rqureshi\Desktop\cross_product.gmf'

Create GmatFunction dot_product
dot_product.FunctionPath = ...
'C:\Users\rqureshi\Desktop\dot_product.gmf'      

Create Array v1[3,1] v2[3,1] v3[3,1] ...
v4[3,1] v5[3,1]

Create Variable v6
Create String tempstring


BeginMissionSequence

v1(1,1) = 1
v1(2,1) = 2
v1(3,1) = 3
v2(1,1) = 4
v2(2,1) = 5
v2(3,1) = 6
v4(1,1) = 1
v4(2,1) = 2
v4(3,1) = 3
v5(1,1) = 4
v5(2,1) = -5
v5(3,1) = 6

% Call function. Pass local arrays as input:
% Receive local array as output
[v3] = cross_product(v1, v2)

Report rf v3

% Call function. Pass local arrays as input:
% Receive local variable as output
GMAT [v6] = dot_product(v4, v5)

tempstring = '---------'
Report rf tempstring
Report rf v6


%%%%%% cross_product Function begins below:

function [cross] = cross_product(vec1,vec2)

Create Array cross[3,1]

BeginMissionSequence

cross(1,1) = vec1(2,1)*vec2(3,1) - vec1(3,1)*vec2(2,1)
cross(2,1) = -(vec1(1,1)*vec2(3,1) - vec1(3,1)*vec2(1,1))
cross(3,1) = vec1(1,1)*vec2(2,1) - vec1(2,1)*vec2(1,1)


%%%%%% dot_product Function begins below:

function [c] = dot_product(a1,b1)

Create Variable c

BeginMissionSequence

c = a1(1,1)*b1(1,1) + a1(2,1)*b1(2,1) + a1(3,1)*b1(3,1)</code></programlisting>
    </informalexample>

    <informalexample>
      <para>Call GMAT function and pass local spacecraft as input, perform
      simple operation inside the function, then send out updated, local
      spacecraft to the main script. Finally report spacecraft old and updated
      position vector to the local report file subscriber:</para>

      <programlisting><code>Create Spacecraft aSat
aSat.DateFormat = UTCGregorian;
aSat.Epoch = '01 Jan 2000 11:59:28.000'
aSat.CoordinateSystem = EarthMJ2000Eq
aSat.DisplayStateType = Cartesian
aSat.X = 7100
aSat.Y = 0
aSat.Z = 1300

Create ReportFile rf
rf.WriteHeaders = false

Create GmatFunction Spacecraft_In_Out
Spacecraft_In_Out.FunctionPath = ...
'C:\Users\rqureshi\Desktop\Spacecraft_In_Out.gmf'


BeginMissionSequence

% Report initial S/C Position to local 'rf':
Report rf aSat.X aSat.Y aSat.Z

% Call function. Pass local S/C as input:
% Receive updated local S/C:
[aSat] = Spacecraft_In_Out(aSat)

% Report updated S/C Position to local 'rf':
Report rf aSat.X aSat.Y aSat.Z



%%%%%%%%%% Function begins below:

function [aSat] = Spacecraft_In_Out(aSat)

% Create local S/C:
Create Spacecraft aSat

BeginMissionSequence

% Update the S/C Position vector:
% Send updated S/C back to main script:
aSat.X = aSat.X + 1000
aSat.Y = aSat.Y + 2000
aSat.Z = aSat.Z + 3000</code></programlisting>
    </informalexample>
  </refsection>
</refentry>
