<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xml:id="While" xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:m="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <indexterm>
    <primary>While</primary>
  </indexterm>

  <refmeta>
    <refentrytitle>While</refentrytitle>

    <refmiscinfo class="source">GMAT</refmiscinfo>

    <refmiscinfo class="version">R2012a</refmiscinfo>

    <refmiscinfo class="manual">Commands</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>While</refname>

    <refpurpose>Run a while loop</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis></synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>The while loop is a control logic function that allows GMAT to check
    the spacecraft's status on a given parameter while performing a command or
    another control logic function within the mission sequence. When a
    spacecraft has reached the given property, the while loop will check its
    condition and react according to the equation defined in the loop's dialog
    box.</para>
  </refsection>

  <refsection>
    <title>Options</title>

    <variablelist>
      <varlistentry>
        <term>&lt;logical expression&gt;</term>

        <listitem>
          <para>Arg1 and Arg2 can be any of the following: Real Number, Array,
          Variable, Spacecraft Parameter or any other user defined
          parameter.</para>

          <variablelist>
            <varlistentry>
              <term>Default</term>

              <listitem>
                <para>DefaultSC.ElapsedDays &lt; 1.0</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Limits</term>

              <listitem>
                <para>Arg1 &lt; Arg2 and &lt; can be &gt; , &lt; , &gt;= ,
                &lt;= , == , ~=</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Units</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>&lt;Statements&gt;</term>

        <listitem>
          <variablelist>
            <varlistentry>
              <term>Default</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Limits</term>

              <listitem>
                <para>Any script line that can be in the mission
                sequence</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Units</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>|</term>

        <listitem>
          <para>The | option allows the user to set an OR operator in between
          s.</para>

          <variablelist>
            <varlistentry>
              <term>Default</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Limits</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Units</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>&amp;</term>

        <listitem>
          <para>The &amp; option allows the user to set an AND operator in
          between &lt;logical expression&gt;s.</para>

          <variablelist>
            <varlistentry>
              <term>Default</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Limits</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Units</term>

              <listitem>
                <para>None</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <refsection>
      <title>Script Syntax</title>

      <itemizedlist>
        <listitem>
          <para>Simple While Loop</para>

          <programlisting><code>While &lt;logical expression&gt;;
    &lt;Statements&gt;;
EndWhile;</code></programlisting>
        </listitem>

        <listitem>
          <para>Compound While Loop</para>

          <programlisting><code>While &lt;logical expression&gt; | &lt;logical expression&gt; &amp; &lt;logical expression&gt;;
    &lt;Statements&gt;
EndWhile;</code></programlisting>
        </listitem>
      </itemizedlist>
    </refsection>

    <refsection>
      <title>Script Examples</title>

      <programlisting><code>While DefaultSC.ElapsedDays &lt; 1;
Propagate DefaultProp (DefaultSC , DefaultSC.Elapsed Days = 0.01);
EndWhile;

While MyVariable &lt; MyArray(1,1);
MyArray(1,1) = 5;
EndWhile;</code></programlisting>
    </refsection>
  </refsection>
</refentry>
