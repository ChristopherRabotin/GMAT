<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="LEOStationKeeping"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>LEO Station Keeping</title>

  <section>
    <title>Objective and Overview</title>

    <para>This basic tutorial explains how to perform basic station keeping of
    a spacecraft's semi-major axis and right ascension of the ascending node
    while in low Earth orbit. The strategy used here to keep the spacecraft in
    its orbit is somewhat crude compared to that used by actual spacecraft.
    However, this information is still valuable in that it provides a good
    example for using control logic and targeting sequences in the same
    mission.</para>

    <para>Download the script file: <link
    xlink:href="scripts/LEOStationKeepingTutorial.script">LEOStationKeepingTutorial.script</link></para>

    <section>
      <title>Prerequisites</title>

      <itemizedlist>
        <listitem>
          <para>Knowledge</para>

          <itemizedlist>
            <listitem>
              <para>Basic understanding of Keplarian orbital parameters</para>
            </listitem>

            <listitem>
              <para>Basic understanding of low Earth orbit station
              keeping</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Tutorials:</para>

          <itemizedlist>
            <listitem>
              <para><link linkend="CreatingandPropagatingaSpacecraft">Creating
              and Propagating a Spacecraft</link></para>
            </listitem>

            <listitem>
              <para><link linkend="DesigningaHohmannTransfer">Designing a
              Hohmann Transfer</link></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Objects:</para>

          <itemizedlist>
            <listitem>
              <para><link linkend="OrbitTab">Spacecraft Object-Orbit
              Tab</link></para>
            </listitem>

            <listitem>
              <para><link linkend="ImpulsiveBurn">Impulsive Burn
              Object</link></para>
            </listitem>

            <listitem>
              <para><link linkend="Propagator">Propagator Object</link></para>
            </listitem>

            <listitem>
              <para><link linkend="DifferentialCorrector">Differential
              Corrector Object</link></para>
            </listitem>

            <listitem>
              <para><link linkend="OpenGLPlot">OpenGL Plot
              Object</link></para>
            </listitem>

            <listitem>
              <para><link linkend="CoordinateSystems">Coordinate System
              Objects</link></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Commands:</para>

          <itemizedlist>
            <listitem>
              <para><link linkend="While">While Command</link></para>
            </listitem>

            <listitem>
              <para><link linkend="If">If</link></para>
            </listitem>

            <listitem>
              <para><link linkend="Maneuver">Maneuver Command</link></para>
            </listitem>

            <listitem>
              <para><link linkend="Propagate">Propagate Command</link></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Mission Description</title>

      <itemizedlist>
        <listitem>
          <para>Objective</para>

          <itemizedlist>
            <listitem>
              <para>Maintain a low Earth orbit by making corrections to the
              spacecraft's altitude and right ascension of the ascending
              node.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Assume:</para>

          <itemizedlist>
            <listitem>
              <para>A spacecraft in a preexisting orbit with a given epoch and
              orbital parameters</para>
            </listitem>

            <listitem>
              <para>A realistic force model including non-spherical gravity
              and atmospheric drag</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Find:</para>

          <itemizedlist>
            <listitem>
              <para>The deltaV required in the spacecraft's direction of
              travel to keep it in orbit within the given altitude</para>
            </listitem>

            <listitem>
              <para>The deltaV required perpendicular to the spacecraft's
              direction of travel to keep its right ascension of the ascending
              node from drifting with respect to the inertial frame</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Resource, Mission, and Output Trees</title>

      <informaltable colsep="0" frame="none">
        <tgroup cols="3">
          <colspec colname="c1" />

          <colspec colname="c2" />

          <colspec colname="c3" />

          <tbody>
            <row>
              <entry><screenshot>
                  <info>
                    <title>Figure: The Resource, Mission, and Output Trees for
                    this particular LEO station keeping mission</title>
                  </info>

                  <mediaobject>
                    <imageobject>
                      <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                                 fileref="files/images/Tut_LEO_TheResourceMissionandOutputTreesforthisParticularLEOStationKeepingMission1.jpeg"></imagedata>
                    </imageobject>
                  </mediaobject>
                </screenshot></entry>

              <entry><screenshot>
                  <info>
                    <title>Figure: The Resource, Mission, and Output Trees for
                    this particular LEO station keeping mission</title>
                  </info>

                  <mediaobject>
                    <imageobject>
                      <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                                 fileref="files/images/Tut_LEO_TheResourceMissionandOutputTreesforthisParticularLEOStationKeepingMission2.jpeg"></imagedata>
                    </imageobject>
                  </mediaobject>
                </screenshot></entry>

              <entry><screenshot>
                  <info>
                    <title>Figure: The Resource, Mission, and Output Trees for
                    this particular LEO station keeping mission</title>
                  </info>

                  <mediaobject>
                    <imageobject>
                      <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                                 fileref="files/images/Tut_LEO_TheResourceMissionandOutputTreesforthisParticularLEOStationKeepingMission3.jpeg"></imagedata>
                    </imageobject>
                  </mediaobject>
                </screenshot></entry>
            </row>

            <row>
              <entry align="center" nameend="c3" namest="c1">Figure: The
              Resource, Mission, and Output Trees for this particular LEO
              station keeping mission</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>

  <section>
    <title>Creating and Configuring the Resource Tree</title>

    <para>This section will outline exactly what resources are required to
    complete the mission outlined within this tutorial. The spacecraft Sat
    will be in a highly inclined orbit of nearly 97 degrees. As stated
    previously, these resources will give you the tools necessary to keep
    LEOsat in its orbit.</para>

    <section>
      <title>Objects Required</title>

      <itemizedlist>
        <listitem>
          <para>Spacecraft: LEOsat</para>
        </listitem>

        <listitem>
          <para>Burns: DefaultIB (default)</para>
        </listitem>

        <listitem>
          <para>Propagators: LEOprop</para>
        </listitem>

        <listitem>
          <para>Solvers: DC1</para>
        </listitem>

        <listitem>
          <para>Plots/Reports: SMAview , RAANview</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Creating and Modifying Objects</title>

      <itemizedlist>
        <listitem>
          <para>Spacecraft</para>

          <itemizedlist>
            <listitem>
              <para>Rename DefaultSC to LEOsat</para>
            </listitem>

            <listitem>
              <para>Change the Epoch Format to UTCGregorian</para>
            </listitem>

            <listitem>
              <para>Set the Epoch to Jan 01 2000 11:59:28.000</para>
            </listitem>

            <listitem>
              <para>Switch the State Type to Keplarian</para>
            </listitem>

            <listitem>
              <para>Set SMA = 6738.95113401 , ECC = 0.00168481942805 , INC =
              96.8535019521 , RAAN = 279.829547746 , AOP = 246.130924803 , TA
              = 308.589822969</para>
            </listitem>

            <listitem>
              <para>Note that when you click 'Apply' in this window, some of
              the values for your orbital elements may change but this is
              normal and does not require you to change them back again</para>
            </listitem>
          </itemizedlist>

          <para>Script Syntax:</para>

          <programlisting><code>Create Spacecraft LEOsat;
GMAT LEOsat.DateFormat = UTCGregorian;
GMAT LEOsat.Epoch = '01 Jan 2000 11:59:28.000';
GMAT LEOsat.CoordinateSystem = EarthMJ2000Eq;
GMAT LEOsat.DisplayStateType = Keplerian;
GMAT LEOsat.SMA = 6738.95113401;
GMAT LEOsat.ECC = 0.001684819428049389;
GMAT LEOsat.INC = 96.8535019521;
GMAT LEOsat.RAAN = 279.829547746;
GMAT LEOsat.AOP = 246.1309248029877;
GMAT LEOsat.TA = 308.5898229690123;
</code></programlisting>

          <screenshot>
            <info>
              <title>Figure: LEOsat Spacecraft Object</title>
            </info>

            <mediaobject>
              <imageobject>
                <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                           fileref="files/images/Tut_LEO_LEOsatSpacecraftObject.jpeg"></imagedata>
              </imageobject>

              <caption>
                <para>Figure: LEOsat Spacecraft Object</para>
              </caption>
            </mediaobject>
          </screenshot>
        </listitem>

        <listitem>
          <para>Propagators</para>

          <itemizedlist>
            <listitem>
              <para>Rename DefaultProp to LEOprop</para>
            </listitem>

            <listitem>
              <para>Change both the Degree and Order of the gravity model to
              10 to make it more realistic</para>
            </listitem>

            <listitem>
              <para>Set the Atmosphere Model to JacchiaRoberts</para>
            </listitem>

            <listitem>
              <para>Add the Sun, and Luna as Point Masses</para>
            </listitem>

            <listitem>
              <para>Check the Use Solar Radiation Pressure box</para>
            </listitem>
          </itemizedlist>

          <para>Script Syntax:</para>

          <programlisting><code>Create ForceModel LEOprop_ForceModel;
GMAT LEOprop_ForceModel.CentralBody = Earth;
GMAT LEOprop_ForceModel.PrimaryBodies = {Earth};
GMAT LEOprop_ForceModel.PointMasses = {Sun, Luna};
GMAT LEOprop_ForceModel.Drag = JacchiaRoberts;
GMAT LEOprop_ForceModel.SRP = On;
GMAT LEOprop_ForceModel.ErrorControl = RSSStep;
GMAT LEOprop_ForceModel.GravityField.Earth.Degree = 10;
GMAT LEOprop_ForceModel.GravityField.Earth.Order = 10;
GMAT LEOprop_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT LEOprop_ForceModel.Drag.F107 = 150;
GMAT LEOprop_ForceModel.Drag.F107A = 150;
GMAT LEOprop_ForceModel.Drag.MagneticIndex = 3;
GMAT LEOprop_ForceModel.SRP.Flux = 1367;
GMAT LEOprop_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create Propagator LEOprop;
GMAT LEOprop.FM = LEOprop_ForceModel;
GMAT LEOprop.Type = RungeKutta89;
GMAT LEOprop.InitialStepSize = 60;
GMAT LEOprop.Accuracy = 9.999999999999999e-012;
GMAT LEOprop.MinStep = 0.001;
GMAT LEOprop.MaxStep = 2700;
GMAT LEOprop.MaxStepAttempts = 50;
</code></programlisting>

          <screenshot>
            <info>
              <title>Figure: LEOprop Propagator Object</title>
            </info>

            <mediaobject>
              <imageobject>
                <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                           fileref="files/images/Tut_LEO_LEOpropPropagatorObject.jpeg"></imagedata>
              </imageobject>

              <caption>
                <para>Figure: LEOprop Propagator Object</para>
              </caption>
            </mediaobject>
          </screenshot>
        </listitem>

        <listitem>
          <para>Solvers</para>

          <itemizedlist>
            <listitem>
              <para>Create a <link
              linkend="DifferentialCorrector">Differential Corrector
              Object</link> under Solvers &gt; Boundary Value Solvers</para>
            </listitem>
          </itemizedlist>

          <para>Script Syntax:</para>

          <programlisting><code>Create DifferentialCorrector DefaultDC;
GMAT DefaultDC.ShowProgress = true;
GMAT DefaultDC.ReportStyle = Normal;
GMAT DefaultDC.TargeterTextFile = targeter_DefaultDC.data;
GMAT DefaultDC.Variables = {dV.V, dV.N};
GMAT DefaultDC.MaximumIterations = 25;
GMAT DefaultDC.UseCentralDifferences = false;
</code></programlisting>

          <screenshot>
            <info>
              <title>Figure: DefaultDC Boundary Value Solver Object</title>
            </info>

            <mediaobject>
              <imageobject>
                <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                           fileref="files/images/Tut_LEO_DefaultDCBoundaryValueSolverObject.jpeg"></imagedata>
              </imageobject>

              <caption>
                <para>Figure: DefaultDC Boundary Value Solver Object</para>
              </caption>
            </mediaobject>
          </screenshot>
        </listitem>

        <listitem>
          <para>Plots/Reports</para>

          <itemizedlist>
            <listitem>
              <para>Rename DefaultOpenGL to SMAview</para>

              <itemizedlist>
                <listitem>
                  <para>Uncheck Draw XY Plane</para>
                </listitem>

                <listitem>
                  <para>Change the View Point Vector to [ 15000 , 3000 , 0
                  ]</para>
                </listitem>
              </itemizedlist>

              <para>Script Syntax:</para>

              <programlisting><code>Create OpenGLPlot SMAview;
GMAT SMAview.SolverIterations = Current;
GMAT SMAview.Add = {LEOsat, Earth};
GMAT SMAview.OrbitColor = [ 255 32768 ];
GMAT SMAview.TargetColor = [ 8421440 0 ];
GMAT SMAview.CoordinateSystem = EarthMJ2000Eq;
GMAT SMAview.ViewPointReference = Earth;
GMAT SMAview.ViewPointVector = [ 15000 3000 0 ];
GMAT SMAview.ViewDirection = Earth;
GMAT SMAview.ViewScaleFactor = 1;
GMAT SMAview.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT SMAview.ViewUpAxis = Z;
GMAT SMAview.XYPlane = Off;</code></programlisting>

              <screenshot>
                <info>
                  <title>Figure: L1View OpenGL Plot Object</title>
                </info>

                <mediaobject>
                  <imageobject>
                    <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                               fileref="files/images/Tut_LEO_L1ViewOpenGLPlotObject.jpeg"></imagedata>
                  </imageobject>

                  <caption>
                    <para>Figure: L1View OpentGL Plot Object</para>
                  </caption>
                </mediaobject>
              </screenshot>
            </listitem>

            <listitem>
              <para>Create an OpenGL Plot named RAANview</para>

              <itemizedlist>
                <listitem>
                  <para>Add Earth to the Selected Celestial Objects
                  list</para>
                </listitem>

                <listitem>
                  <para>Uncheck Draw XY Plane</para>
                </listitem>

                <listitem>
                  <para>Change the View Point Vector to [ 1800 , 0 , 15000
                  ]</para>
                </listitem>

                <listitem>
                  <para>Change the View Up Definition Axis to X.</para>
                </listitem>
              </itemizedlist>

              <para>Script Syntax:</para>

              <programlisting><code>Create OpenGLPlot RAANview;
GMAT RAANview.SolverIterations = Current;
GMAT RAANview.Add = {LEOsat, Earth};
GMAT RAANview.OrbitColor = [ 255 1743054 ];
GMAT RAANview.TargetColor = [ 8421440 8421440 ];
GMAT RAANview.CoordinateSystem = EarthMJ2000Eq;
GMAT RAANview.ViewPointReference = Earth;
GMAT RAANview.ViewPointVector = [ 1800 0 15000 ];
GMAT RAANview.ViewDirection = Earth;
GMAT RAANview.ViewScaleFactor = 1;
GMAT RAANview.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT RAANview.ViewUpAxis = X;
GMAT RAANview.CelestialPlane = Off;
GMAT RAANview.XYPlane = Off;</code></programlisting>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>Creating and Configuring the Mission Sequence</title>

    <para>The mission sequence presented here is relatively simple one. As
    said before, it is a good example of how to use loops, if statements, and
    targeting loops to achieve a goal. Again, this is not a perfect
    representation of how to efficiently implement low Earth orbit station
    keeping but it does work. How well it works and how 'tight' your orbit
    variation is will be up to you. Once you have implemented this version of
    the mission sequence, you may go back through and change the If statements
    so that they allow LEOsat to drift from its orbit more. This will increase
    the orbit's deviation but decrease the amount of fuel required.</para>

    <itemizedlist>
      <listitem>
        <para>Insert a While after Propagate1</para>

        <itemizedlist>
          <listitem>
            <para>Change the right hand side value to 10</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>After While1, insert another Propagate</para>

        <itemizedlist>
          <listitem>
            <para>Remove the propagate's stopping condition parameter and
            condition so that both fields are blank</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Add the first of two If statements now</para>

        <itemizedlist>
          <listitem>
            <para>Change the left hand side to LEOsat.Earth.SMA</para>
          </listitem>

          <listitem>
            <para>Change the right hand side to 6738.5</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Insert a Target at this point</para>
      </listitem>

      <listitem>
        <para>Append this with a Vary, a Maneuver, and an Achieve</para>

        <itemizedlist>
          <listitem>
            <para>Change the Goal to LEOsat.Earth.SMA</para>
          </listitem>

          <listitem>
            <para>Set the Value as 6738.951134009997</para>
          </listitem>

          <listitem>
            <para>Set the Tolerance as 0.05</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Insert another If after EndIf1</para>

        <itemizedlist>
          <listitem>
            <para>Set the left hand side as LEOsat.EarthMJ2000Eq.RAAN</para>
          </listitem>

          <listitem>
            <para>Change the right hand side to 279.709</para>
          </listitem>

          <listitem>
            <para>Add an '|' symbol under the 'If' to continue the
            statement</para>
          </listitem>

          <listitem>
            <para>Set the left hand side of this second expression to the same
            LEOsat.EarthMJ2000Eq.RAAN</para>
          </listitem>

          <listitem>
            <para>Set the Condition as greater than, '&gt;'</para>
          </listitem>

          <listitem>
            <para>Add 279.949 as the right hand side value</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Insert a final propagate after If2</para>

        <itemizedlist>
          <listitem>
            <para>Set the stopping condition parameter as
            LEOsat.EarthMJ2000Eq.VZ</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Insert the last target now</para>
      </listitem>

      <listitem>
        <para>Append this target with another set of vary, maneuver, and
        achieve so as to match the previous sequence</para>

        <itemizedlist>
          <listitem>
            <para>Change the Variable of Vary2 to DefaultIB.N</para>
          </listitem>

          <listitem>
            <para>Also set the lower of Vary 2 as -3.14159</para>
          </listitem>

          <listitem>
            <para>LEOsat.EarthMJ2000Eq.RAAN should be the Goal for
            Achieve2</para>
          </listitem>

          <listitem>
            <para>279.829547746 is Achieve2's Value</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <para>Script Syntax:</para>

    <programlisting><code>Propagate LEOprop(LEOsat) {LEOsat.ElapsedSecs = 8640.0};
While LEOsat.ElapsedDays &lt; 10
   Propagate LEOprop(LEOsat);
   If LEOsat.Earth.SMA &lt; 6738.5
      Target DC1;
         Vary DC1(DefaultIB.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
         Maneuver DefaultIB(LEOsat);
         Achieve DC1(LEOsat.Earth.SMA = 6738.951134009997, {Tolerance = 0.05});
      EndTarget;  % For targeter DefaultDC
   EndIf;
   If LEOsat.EarthMJ2000Eq.RAAN &lt; 279.709 | LEOsat.EarthMJ2000Eq.RAAN &gt; 279.949
      Propagate LEOprop(LEOsat) {LEOsat.EarthMJ2000Eq.VZ = 0.0};
      Target DC1;
         Vary DC1(DefaultIB.N = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = -3.14159, Upper = 3.14159});
         Maneuver DefaultIB(LEOsat);
         Achieve DC1(LEOsat.EarthMJ2000Eq.RAAN = 279.829547746, {Tolerance = 0.1});
      EndTarget;  % For targeter DefaultDC
   EndIf;
EndWhile;</code></programlisting>

    <screenshot>
      <info>
        <title>Figure: Propagate1 Propagate Command</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                     fileref="files/images/Tut_LEO_Propagate1PropagateCommand.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: Propagate1 Propagate Command</para>
        </caption>
      </mediaobject>
    </screenshot>

    <screenshot>
      <info>
        <title>Figure: While1 While Command</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                     fileref="files/images/Tut_LEO_While1WhileCommand.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: While1 While Command</para>
        </caption>
      </mediaobject>
    </screenshot>

    <screenshot>
      <info>
        <title>Figure: If1 If Command</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                     fileref="files/images/Tut_LEO_If1IfCommand.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: If1 If Command</para>
        </caption>
      </mediaobject>
    </screenshot>

    <screenshot>
      <info>
        <title>Figure: Vary1 Vary Command</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                     fileref="files/images/Tut_LEO_Vary1VaryCommand.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: Vary1 Vary Command</para>
        </caption>
      </mediaobject>
    </screenshot>

    <screenshot>
      <info>
        <title>Figure: Achieve1 Achieve Command</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center"
                     fileref="files/images/Tut_LEO_Achieve1AchieveCommand.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: Achieve1 Achieve Command</para>
        </caption>
      </mediaobject>
    </screenshot>
  </section>

  <section>
    <title>Running the Mission</title>

    <para>The views that you created are good for seeing how well the mission
    sequence is keeping LEOsat in its orbit. The SMA view shows some thickness
    to it while the RAAN view shows barely any at all. You may now try and
    change the mission parameters as outlined in the mission tree section to
    see how the spacecraft's drift is affected.</para>

    <screenshot>
      <info>
        <title>Figure: Output</title>
      </info>

      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%" align="center" fileref="files/images/Tut_LEO_Output.jpeg"></imagedata>
        </imageobject>

        <caption>
          <para>Figure: Output</para>
        </caption>
      </mediaobject>
    </screenshot>
  </section>
</chapter>
