<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="WelcomeToGmat"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="Welcome">Welcome to GMAT</title>

  <para>GMAT is an open source trajectory design and optimization system
  developed by a team of NASA, private industry, public, and private
  contributors and is used for real-world engineering studies, as a tool for
  education and public engagement. GMAT is designed to model and optimize
  spacecraft trajectories in flight regimes ranging from low Earth orbit to
  lunar, interplanetary, and other deep space missions. The system supports
  constrained and unconstrained trajectory optimization and built-in features
  make defining cost and constraint functions trivial. GMAT also contains
  initial value solvers (propagators) and boundary value solvers and
  efficiently propagates spacecraft either singly or as coupled sets. GMAT’s
  propagators naturally synchronize the epochs of multiple vehicles and avoid
  fixed step integration and interpolation when doing so. It is developed in
  an open source process to maximize technology transfer, to permit anyone to
  develop and validate new algorithms, and to enable those new algorithms to
  quickly transition into the high fidelity core.</para>

  <para>Users can interact with GMAT using either a graphical user interface
  (GUI) or a custom scripting language modeled after the syntax used in The
  MathWorks’ MATLAB® system. All of the system elements can be expressed
  through either interface, and users can convert between the two in either
  direction.</para>

  <para>Analysts model space missions in GMAT by first creating and
  configuring resources such as spacecraft, propagators, optimizers, and data
  files. These resources are then used in a mission sequence to model the
  trajectory of the spacecraft and simulate mission events. The mission
  sequence supports commands such as nonlinear constraints, minimization,
  propagatation, GMAT and MATLAB functions, inline equations, and script
  events.</para>

  <para>GMAT can display trajectories in a realistic three-dimensional view,
  plot parameters against one another, and save parameters to files for later
  processing. The graphics capabilities are fully interactive, plotting data
  as a mission is run and allowing users to zoom into regions of interest.
  Trajectories and data can be viewed in any coordinate system defined in
  GMAT, and GMAT allows users to rotate the view and set the focus to any
  object in the display. The trajectory view can be animated so users can
  watch the evolution of the trajectory over time.</para>

  <simplesect>
    <title>Licensing</title>

    <para>GMAT is licensed under the Apache License 2.0. The license text is
    contained in the file <filename>License.txt</filename> in root directory
    of the GMAT distribution.</para>
  </simplesect>

  <simplesect>
    <title>Platform Support</title>

    <para>GMAT has been rigorously tested on the Windows 7 platform and we
    perform nightly regression tests running over 10000 test cases for the
    script engine and over 4000 test cases for the GUI. While the system
    engine is routinely built on Mac and Linux, we consider the software to be
    in alpha form on those plaforms. GMAT uses the wxWidgets cross-platform
    user interface toolkit and can be built using either Microsoft Visual
    Studio or the GNU Compiler Collection (GCC). GMAT is written in ANSI
    standard C++ (approximately 380,000 non-comment source lines of code)
    using an object-oriented methodology, with a rich class structure designed
    to make new features simple to incorporate.</para>
  </simplesect>

  <simplesect>
    <title>User Interfaces</title>

    <para>GMAT has several user interfaces. The interactive graphical user
    interface is introduced in more detail in later sections. The script
    interface is textual and also allows the user to configure and execute all
    aspects of GMAT. There is a secondary MATLAB interface that allows for
    running the system via calls from MATLAB to GMAT and allows GMAT to call
    MATLAB functions from within the GMAT command sequence. A low-level C API
    is also currently under development.</para>
  </simplesect>

  <simplesect>
    <title>Development Status</title>

    <para>GMAT has undergone extensive testing and is mature software. The
    system has been used to optimize maneuvers for flight projects such as
    NASA’s LCROSS and ARTEMIS missions, and the Lunar Reconnaissance Orbiter,
    and for optimization and analysis for the OSIRIS-REx and MMS missions.
    Historically, solutions from GMAT have been verified in other operational
    systems. However, with release R2013a, the GMAT team will perform final
    operational certifications testing of the system be completed in Aug.
    2013. After completion of operaration certification, GMAT will be ready
    for operational support of flight projects.</para>
  </simplesect>

  <simplesect>
    <title>Contributors</title>

    <para>The Navigation and Mission Design Branch at NASA’s Goddard Space
    Flight Center performs project management activities and is involved in
    most phases of the development process including requirements, algorithms,
    design, and testing. The Ground Software Systems Branch performs design,
    implementation, and integration testing. The Flight Software Branch
    contributes to design and implementation. GMAT contributors include
    volunteers and those paid for services they provide. We welcome new
    contributors to the project, either as users providing feedback about the
    features of the system, or as developers interested in contributing to the
    implementation of the system. Current and past contributors
    include:</para>

    <itemizedlist>
      <listitem>
        <para>Thinking Systems, Inc. (system architecture and all aspects of
        development)</para>
      </listitem>

      <listitem>
        <para>Air Force Research Lab (all aspects of development)</para>
      </listitem>

      <listitem>
        <para>a.i. solutions (testing)</para>
      </listitem>

      <listitem>
        <para>Boeing (algorithms and testing)</para>
      </listitem>

      <listitem>
        <para>The Schafer Corporation (all aspects of development)</para>
      </listitem>

      <listitem>
        <para>Honeywell Technology Solutions (testing)</para>
      </listitem>

      <listitem>
        <para>Computer Sciences Corporation (requirements)</para>
      </listitem>
    </itemizedlist>

    <para>The NASA Jet Propulsion Laboratory (JPL) has provided funding for
    integration of the SPICE toolkit into GMAT. Additionally, the European
    Space Agency’s (ESA) Advanced Concepts team has developed optimizer
    plug-ins for the Non-Linear Programming (NLP) solvers SNOPT (Sparse
    Nonlinear OPTimizer) and IPOPT (Interior Point OPTimizer).</para>
  </simplesect>
</chapter>
