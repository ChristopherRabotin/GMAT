<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xml:id="Propagator" xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:m="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <indexterm>
    <primary>ResourceName</primary>
  </indexterm>

  <refmeta>
    <refentrytitle>ResourceName</refentrytitle>

    <refmiscinfo class="source">GMAT</refmiscinfo>

    <refmiscinfo class="version">R2012a</refmiscinfo>

    <refmiscinfo class="manual">Resources</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>Propagator</refname>

    <refpurpose>A propagator models spacecraft motion.</refpurpose>
  </refnamediv>

  <refsection>
    <title>Description</title>

    <para>A <guilabel>Propagator</guilabel> is the GMAT component used to
    model spacecraft motion. GMAT contains two types of propagators: a
    numerical integrator type, and an ephemeris type. When using a numerical
    integrator type propagator, you can choose among a suite of numerical
    integrators implementing Runge-Kutta and predictor corrector methods. See
    the Remarks section below for detailed discussion of GMAT’s numerical
    integrators as well as performance and accuracy comparisons, and usage
    recommendations.</para>

    <para>A <guilabel>Propagator</guilabel> object that uses a numerical
    integrator (as opposed to an ephemeris propagator) is one of a few objects
    in GMAT that is configured differently in the scripting and in the GUI. In
    the GUI, you configure the integrator and force model setting on the same
    dialog box. When working in the script, you must create a
    <guilabel>ForceModel</guilabel> object separately from the
    <guilabel>Propagator</guilabel> and specify the force model using the
    “<guilabel>FM</guilabel>” field on the propagator object. See examples
    later in this section for details.</para>

    <para>The ephemeris based propagator is turned off in the GMAT
    installation because final testing is not complete. Later in this section,
    we describe how to enable the SPICE propagator and show a brief example
    that uses it.</para>

    <!--<para><phrase role="ref_seealso">See Also</phrase>: <xref
    linkend="LinkId"/>, <xref linkend="LinkId"/></para>-->
  </refsection>

  <refsection>
    <title>Options</title>

    <informaltable colsep="0" frame="topbot">
      <tgroup cols="2">
        <colspec colnum="1" colwidth=".5*"/>

        <colspec colnum="2" colwidth="3*"/>

        <thead>
          <row>
            <entry>Option</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><guilabel>FM</guilabel></entry>

            <entry><para>Identifies the force model used by an
            integrator.</para><variablelist>
                <varlistentry>
                  <term>Data Type</term>

                  <listitem>
                    <para>OBJECT_TYPE</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>Valid force model.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Access</term>

                  <listitem>
                    <para>set</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para>N/A</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI, script</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>

          <row>
            <entry><guilabel>Type</guilabel></entry>

            <entry><para>Specifies the integrator or analytic propagator used
            to model time evolution of spacecraft motion. </para><variablelist>
                <varlistentry>
                  <term>Data Type</term>

                  <listitem>
                    <para>OBJECT_TYPE</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>PrinceDormand78, PrinceDormand45,
                    RungeKutta89,RungeKutta68, RungeKutta56, BulirschStoer,
                    AdamsBashforthMoulton</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para>RungeKutta89</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Required</term>

                  <listitem>
                    <para>yes</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI, script</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </refsection>

  <refsection>
    <title>GUI</title>

    <mediaobject>
      <imageobject>
        <imagedata align="center" contentdepth="100%"
                   fileref="files/images/Resource_Integrator.png" scalefit="1"
                   width="100%"/>
      </imageobject>
    </mediaobject>

    <para>Settings for the embedded Runge-Kutta integrators. See the Remarks
    section for additional settings for the
    <guilabel>AdamsBashforthMoulton.</guilabel></para>
  </refsection>

  <refsection>
    <title>Remarks</title>

    <para><emphasis>Best Practices for Using Numerical
    Integrators</emphasis></para>

    <para>We recommend that you study the performance and accuracy analysis
    documented later in this section to select a numerical integrator for your
    application. You may need to perform further analysis and comparisons for
    your application. The comparison data below suggest that the
    <guilabel>PrinceDormand78</guilabel> integrator is the best all purpose
    integrator in GMAT. When in doubt, use the
    <guilabel>PrinceDormance78</guilabel> integrator, and set
    <guilabel>MinStep</guilabel> to zero so that the integrator’s adaptive
    step algorithm controls the minimum integration step size. Below are some
    important comments on GMAT’s step size control algorithms and the dangers
    of using a non-zero value for the minimum integration step size.</para>

    <caution>
      <para>Caution: GMAT’s default error computation mode is
      <guilabel>RSStep</guilabel> and this is a more stringent error control
      method than <guilabel>RSSState</guilabel> that is often used as the
      default in other software such as STK. If you set Accuracy to a very
      small number, 1e-13 for example, and leave
      <guilabel>ErrorControl</guilabel> set to <guilabel>RSSStep</guilabel>,
      integrator performance will be poor, for little if any improvement in
      the accuracy of the orbit integration. To find the best balance between
      integration accuracy and performance, we recommend you experiment with
      the accuracy setting for your selected integrator for your application.
      You can start with a relatively high setting of
      <guilabel>Accuracy</guilabel>, say 1e-9, and lower the accuracy by an
      order of magnitude at a time and compare the final orbital states to
      determine where smaller values of <guilabel>Accuracy</guilabel> result
      in longer propagation times without providing more accurate orbital
      solutions.</para>
    </caution>

    <caution>
      <para>Caution: GMAT allows you to set a minimum step on numerical
      integrators. It is possible that the requested
      <guilabel>Accuracy</guilabel> cannot be achieved given the
      <guilabel>MinimumStep</guilabel> setting. The
      <guilabel>Propagator</guilabel> flag
      <guilabel>StopIfAccuracyIsViolated</guilabel> determines the behavior if
      <guilabel>Accuracy</guilabel> cannot be satisfied. If
      <guilabel>StopIfAccuracyIsViolated</guilabel> is true, GMAT will throw
      an error and stop execution if integration accuracy is not satisfied. If
      <guilabel>StopIfAccuracyIsViolated</guilabel> is false, GMAT will only
      throw a warning that the integration accuracy was not satisfied but will
      continue to propagate the orbit.</para>
    </caution>

    <para><emphasis>Numerical Integrators Overview</emphasis></para>

    <para>The table below describes each numerical integrator in
    detail.</para>

    <informaltable colsep="0" frame="topbot">
      <tgroup cols="2">
        <colspec colnum="1" colwidth=".5*"/>

        <colspec colnum="2" colwidth="3*"/>

        <thead>
          <row>
            <entry>Option</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><guilabel>RungeKutta89</guilabel></entry>

            <entry><para>An adaptive step, ninth order Runge-Kutta integrator
            with eighth order error control. The coefficients were derived by
            J. Verner. Verner developed several sets of coefficients for an 89
            integrator and we have chosen the coefficients that are the most
            robust but not necessarily the most efficient.</para></entry>
          </row>

          <row>
            <entry><guilabel>PrinceDormand78</guilabel></entry>

            <entry><para>An adaptive step, eighth order Runge-Kutta integrator
            with seventh order error control. The coefficients were derived by
            Prince and Dormand.</para></entry>
          </row>

          <row>
            <entry><guilabel>PrinceDormand45</guilabel></entry>

            <entry><para>An adaptive step, fifth order Runge-Kutta integrator
            with fourth order error control. The coefficients were derived by
            Prince and Dormand.</para> <para>A second order
            Runge-Kutta-Nystrom type integrator with coefficients developed by
            by Dormand, El-Mikkawy and Prince. The integrator is a 9-stage
            Nystrom integrator, with error control on both the dependent
            variables and their derivatives. This second order implementation
            will correctly integrate forces that are non-conservative but it
            is not recommended for this use. See the integrator comparisons
            below for numerical comparisons. You cannot use this integrator to
            integrate mass during a finite maneuver because the mass flow rate
            is a first order differential equation not supported by this
            integrator.</para></entry>
          </row>

          <row>
            <entry><guilabel>RungeKutta68</guilabel></entry>

            <entry><para>An adaptive step, fifth order Runge-Kutta integrator
            with fourth order error control. The coefficients were derived by
            Prince and Dormand.</para> <para>A second order
            Runge-Kutta-Nystrom type integrator with coefficients developed by
            by Dormand, El-Mikkawy and Prince. The integrator is a 9-stage
            Nystrom integrator, with error control on both the dependent
            variables and their derivatives. This second order implementation
            will correctly integrate forces that are non-conservative but it
            is not recommended for this use. See the integrator comparisons
            below for numerical comparisons. You cannot use this integrator to
            integrate mass during a finite maneuver because the mass flow rate
            is a first order differential equation not supported by this
            integrator.</para></entry>
          </row>

          <row>
            <entry><guilabel>RungeKutta56</guilabel></entry>

            <entry><para>An adaptive step, sixth order Runge-Kutta integrator
            with fifth order error control. The coefficients were derived by
            E. Fehlberg.</para></entry>
          </row>

          <row>
            <entry><guilabel>AdamsBashforthMoulton</guilabel></entry>

            <entry><para>A fourth-order Adams-Bashford predictor /
            Adams-Moulton corrector as described in Fundamentals of
            Astrodynamics by Bate, Mueller and White. The predictor step
            extrapolates the next state of the variables using the the
            derivative information at the current state and three previous
            states of the variables. The corrector uses derivative information
            evaluated for this state, along with the derivative information at
            the original state and two preceding states, to tune this state,
            giving the final, corrected state. The ABM integrator uses the
            RungeKutta89 integrator to start the integration process. The ABM
            is a low order integrator and should not be used for precise
            applications or for highly nonlinear applications such as
            celestial body flybys.</para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para><emphasis>Performance &amp; Accuracy Comparison of Numerical
    Integrators</emphasis></para>

    <mediaobject>
      <imageobject>
        <imagedata align="center" contentdepth="100%"
                   fileref="files/images/IntegratorComparisonTable.png"
                   scalefit="1" width="100%"/>
      </imageobject>
    </mediaobject>

    <para><emphasis>Fields Unique to the AdamsBashforthMoulton
    Integrator</emphasis></para>

    <para>The Adams-Bashforth-Moulton integrator has two additional fields
    named <guilabel>TargetError</guilabel> and <guilabel>LowerError</guilabel>
    that are only active when <guilabel>Type</guilabel> is set to
    <guilabel>AdamsBashforthMoulton</guilabel>. If you are using another
    integrator type, those fields must be removed from your script file to
    avoid parsing errors. When working in the GUI, this is performed
    automatically. See examples below for more details.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <informalexample>
      <para>Propagate an orbit using a general purpose Runge-Kutta
      integrator:</para>

      <programlisting><code>Create Spacecraft aSat;
Create ForceModel aForceModel;

Create Propagator aProp;
aProp.FM              = aForceModel;
aProp.Type            = PrinceDormand78;
aProp.InitialStepSize = 60;
aProp.Accuracy        = 1e-011;
aProp.MinStep         = 0;
aProp.MaxStep         = 86400;
aProp.MaxStepAttempts = 50;
aProp.StopIfAccuracyIsViolated = true;

BeginMissionSequence;

Propagate aProp(aSat) {aSat.ElapsedDays = .2};</code></programlisting>
    </informalexample>

    <informalexample>
      <para>Propagate using a fixed step configuration. Do this by setting
      <guilabel>InitialStepSize</guilabel> to the desired fixed step size and
      setting <guilabel>ErrorControl</guilabel> to <guilabel>None</guilabel>.
      This example propagates in constant steps of 30 seconds:</para>

      <programlisting><code>Create Spacecraft aSat;
Create ForceModel aForceModel;
aForceModel.ErrorControl = None;

Create Propagator aProp;
aProp.FM              = aForceModel;
aProp.Type            = PrinceDormand78;
aProp.InitialStepSize = 30;

BeginMissionSequence;

Propagate aProp(aSat) {aSat.ElapsedDays = .2};</code></programlisting>
    </informalexample>

    <informalexample>
      <para>Propagate an orbit using an Adams-Bashforth-Moulton
      predictor-corrector integrator:</para>

      <programlisting><code>Create Spacecraft aSat;
Create ForceModel aForceModel;
aForceModel.ErrorControl = RSSStep;

Create Propagator aProp;
aProp.FM              = aForceModel;
aProp.Type            = AdamsBashforthMoulton;
aProp.InitialStepSize = 60;
aProp.MinStep         = 0;
aProp.MaxStep         = 86400;
aProp.MaxStepAttempts = 50;
%  Note the following fields must be set with decreasing values!
aProp.Accuracy        = 1e-010;
aProp.TargetError     = 1e-011;
aProp.LowerError      = 1e-013;
aProp.StopIfAccuracyIsViolated = true;

BeginMissionSequence;

Propagate aProp(aSat) {aSat.ElapsedDays = .2};</code></programlisting>
    </informalexample>

  
  </refsection>
</refentry>
