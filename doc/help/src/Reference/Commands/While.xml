<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="While" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>While</title>

  <para>This tutorial was started from the default settings in the June 18,
  2008 build of GMAT.</para>

  <section>
    <title>Overview</title>

    <para>The while loop is a control logic function that allows GMAT to check
    the spacecraft's status on a given parameter while performing a command or
    another control logic function within the mission sequence. When a
    spacecraft has reached the given property, the while loop will check its
    condition and react according to the equation defined in the loop's dialog
    box.</para>

    <section>
      <title>Listing of Objects and Commands that Interact</title>

      <para><itemizedlist>
          <listitem>
            <para>Spacecraft<itemizedlist>
                <listitem>
                  <para>On either side of the equation and inside the loop's
                  Parameter Select Dialog box, an Object Type must be called
                  from the drop down menu to reference for the loop to
                  function properly. Available options include a spacecraft,
                  variables, arrays, or strings.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>

          <listitem>
            <para>Variables/Arrays/Strings<itemizedlist>
                <listitem>
                  <para>See Spacecraft bullet.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>

          <listitem>
            <para>Maneuver Command<itemizedlist>
                <listitem>
                  <para>As part of the while loop definition, the sequence
                  must be performing a command or include an internal control
                  logic function while something else is happening. Typical
                  commands include Maneuver and Propagate and any control
                  function, If, If-Else, For, or While, is possible.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>

          <listitem>
            <para>Propagate Command<itemizedlist>
                <listitem>
                  <para>See Maneuver Command bullet</para>
                </listitem>
              </itemizedlist></para>
          </listitem>

          <listitem>
            <para>Control Logic Functions<itemizedlist>
                <listitem>
                  <para>See Maneuver Command bullet</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
        </itemizedlist></para>
    </section>
  </section>

  <section>
    <title>Using GUI</title>

    <para>The While Loop dialog box contains four sections, a left hand (LHS)
    and right hand (RHS) side of the equation, a logical operator column and a
    condition column. The LHS and RHS supply the parameters to put on either
    side of the condition for the equation, and the logical operators exist so
    more complex loops can be run through GMAT.</para>

    <itemizedlist>
      <listitem>
        <para>LHS/RHS - Field<itemizedlist>
            <listitem>
              <para>Both the LHS and RHS columns have the capability of either
              entering a value or selecting a property from a second dialog
              box, but typically the LHS is a property and the RHS is a value.
              You can manually add a value by applying a double left click, or
              you can open the Parameter Select dialog box by applying a right
              click. In addition to selecting a property, an Object Type and
              an object from the Object List must be highlighted. If a
              property is selected that requires a coordinate system, then a
              system must be chosen from the drop down menu that appears below
              the Object Properties menu.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>

      <listitem>
        <para>Condition - Field<itemizedlist>
            <listitem>
              <para>The condition column supplies the iequality symbols (&lt;,
              &gt;, &lt;=, &gt;=, ==, and ~=) for the expression.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>

      <listitem>
        <para>Logical Operator - Field<itemizedlist>
            <listitem>
              <para>The logical operator column only supplies one option, the
              ability to right click the box to add an And or Or operator
              (&amp; or |). Except for the uppermost box in the far left
              column that states the loop or statement being used, the rest of
              the boxes are open to add operators.</para>

              <screenshot>
                <info>
                  <title>Figure: Default Name and Settings for the While Loop
                  Dialog Box</title>
                </info>

                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="???"></imagedata>
                  </imageobject>

                  <caption>
                    <para>Figure: Default Name and Settings for the While Loop
                    Dialog Box</para>
                  </caption>
                </mediaobject>
              </screenshot>
            </listitem>
          </itemizedlist></para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Using the Script</title>

    <section>
      <title>Script Syntax</title>

      <itemizedlist>
        <listitem>
          <para>Simple While Loop</para>

          <programlisting><code>While &lt;logical expression&gt;;
    &lt;Statements&gt;;
EndWhile;</code></programlisting>
        </listitem>

        <listitem>
          <para>Compound While Loop</para>

          <programlisting><code>While &lt;logical expression&gt; | &lt;logical expression&gt; &amp; &lt;logical expression&gt;;
    &lt;Statements&gt;
EndWhile;</code></programlisting>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Script Examples</title>

      <programlisting><code>While DefaultSC.ElapsedDays &lt; 1;
Propagate DefaultProp (DefaultSC , DefaultSC.Elapsed Days = 0.01);
EndWhile;

While MyVariable &lt; MyArray(1,1);
MyArray(1,1) = 5;
EndWhile;</code></programlisting>
    </section>
  </section>

  <section>
    <title>Reference Table</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>&lt;logical expression&gt;</entry>

            <entry><para>Default: DefaultSC.ElapsedDays &lt; 1.0.</para>
            <para>Options: { Arg1 &lt; Arg2 and &lt; can be &gt; , &lt; ,
            &gt;= , &lt;= , == , ~= }.</para> <para>Arg1 and Arg2 can be any
            of the following: Real Number, Array, Variable, Spacecraft
            Parameter or any other user defined parameter.</para> <para>Units:
            N/A.</para></entry>
          </row>

          <row>
            <entry>&lt;Statements&gt;</entry>

            <entry><para>Default: N/A. </para> <para>Options: { Any script
            line that can be in the mission sequence }.</para> <para>Units:
            N/A. </para></entry>
          </row>

          <row>
            <entry>|</entry>

            <entry><para>Default: N/A.</para> <para>Options: { N/A }.</para>
            <para>The | option allows the user to set an OR operator in
            between s.</para> <para>Units: N/A. </para></entry>
          </row>

          <row>
            <entry>&amp;</entry>

            <entry><para>Default: N/A.</para> <para>Options: { N/A }.</para>
            <para>The &amp; option allows the user to set an AND operator in
            between &lt;logical expression&gt;s.</para> <para>Units: N/A.
            </para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
</section>
