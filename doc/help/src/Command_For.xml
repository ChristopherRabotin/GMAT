<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xml:id="For" xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:m="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <indexterm>
    <primary>For</primary>
  </indexterm>

  <indexterm>
    <primary>EndFor</primary>
  </indexterm>

  <refmeta>
    <refentrytitle>For</refentrytitle>

    <refmiscinfo class="source">GMAT</refmiscinfo>

    <refmiscinfo class="version">R2012a</refmiscinfo>

    <refmiscinfo class="manual">Commands</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>For</refname>

    <refpurpose>Execute a series of commands a specified number of
    times</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Script Syntax</title>

    <synopsis><literal>For</literal> <replaceable>Index</replaceable> = <replaceable>Start</replaceable>:[<replaceable>Increment</replaceable>:]<replaceable>End</replaceable>
    [<replaceable>script statement</replaceable>]
    …
<literal>EndFor</literal></synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>The <guilabel>For</guilabel> command is a control logic statement
    that executes a series of commands a specified number of times. The
    command argument must have one of the following forms:</para>

    <para><code><replaceable>Index</replaceable> =
    <replaceable>Start</replaceable>:<replaceable>End</replaceable></code></para>

    <para>This syntex increments <guilabel>Index</guilabel> from
    <guilabel>Start</guilabel> to <guilabel>End</guilabel> in steps of 1,
    repeating the script statements until <guilabel>Index</guilabel> is
    greater than <guilabel>End</guilabel>. If <guilabel>Start</guilabel> is
    greater than <guilabel>End</guilabel>, then the script statements do not
    execute.</para>

    <para><code><replaceable>Index</replaceable> =
    <replaceable>Start</replaceable>:<replaceable>Increment</replaceable>:<replaceable>End</replaceable></code></para>

    <para>This syntax increments <guilabel>Index</guilabel> from
    <guilabel>Start</guilabel> to <guilabel>End</guilabel> in steps of
    <guilabel>Increment</guilabel>, repeating the script statements until
    <guilabel>Index</guilabel> is greater than <guilabel>End</guilabel> if
    <guilabel>Increment</guilabel> is positive and less than
    <guilabel>End</guilabel> if <guilabel>Increment</guilabel> is negative. If
    <guilabel>Start</guilabel> is less than <guilabel>End</guilabel> and
    <guilabel>Increment</guilabel> is negative, or if
    <guilabel>Start</guilabel> is greater than <guilabel>End</guilabel> and
    <guilabel>Increment</guilabel> is positive, then the script statements do
    not execute.</para>

    <para><phrase role="ref_seealso">See Also</phrase>: <xref linkend="If"/>,
    <xref linkend="While"/></para>
  </refsection>

  <refsection>
    <title>Options</title>

    <informaltable colsep="0" frame="topbot">
      <tgroup cols="2">
        <colspec colnum="1" colwidth=".5*"/>

        <colspec colnum="2" colwidth="3*"/>

        <thead>
          <row>
            <entry>Option</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><guilabel>Index</guilabel></entry>

            <entry><para>Independent variable in a for loop.
            <guilabel>Index</guilabel> is computed according to the arithmetic
            progression defined by the values for <guilabel>Start</guilabel>,
            <guilabel>Increment</guilabel>, and <guilabel>End</guilabel>.
            </para> <variablelist>
                <varlistentry>
                  <term>Accepted Data Types</term>

                  <listitem>
                    <para>
                      <guilabel>Variable</guilabel>
                    </para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>-∞ &lt; <guilabel>Index</guilabel> &lt; ∞</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para><guilabel>Variable</guilabel> named
                    <guilabel>I</guilabel></para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Required</term>

                  <listitem>
                    <para>yes</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI, script</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>

          <row>
            <entry><guilabel>Start</guilabel></entry>

            <entry><para>Initial value for the <guilabel>Index</guilabel>
            parameter </para> <variablelist>
                <varlistentry>
                  <term>Accepted Data Types</term>

                  <listitem>
                    <para>parameter</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>-∞ &lt; <guilabel>Start</guilabel> &lt; ∞</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para>1</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Required</term>

                  <listitem>
                    <para>yes</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI, script</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>

          <row>
            <entry><guilabel>Increment</guilabel></entry>

            <entry><para>The <guilabel>Increment</guilabel> parameter is used
            to compute the arithmetic progression of the loop Index such that
            pass <inlineequation>
                <mathphrase>i</mathphrase>
              </inlineequation> through the loop is <inlineequation>
                <mathphrase><emphasis role="bold">Start</emphasis> +
                i*</mathphrase>
              </inlineequation><emphasis role="bold">
                <inlineequation>
                  <mathphrase>Increment</mathphrase>
                </inlineequation>
              </emphasis> if the resulting value satisfies the constraint
            defined by <guilabel>End</guilabel>. </para> <variablelist>
                <varlistentry>
                  <term>Accepted Data Types</term>

                  <listitem>
                    <para>parameter</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>-∞ &lt; <guilabel>Increment</guilabel> &lt; ∞</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para>1</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Required</term>

                  <listitem>
                    <para>no</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>

          <row>
            <entry><guilabel>End</guilabel></entry>

            <entry><para> The <guilabel>End</guilabel> parameter is the upper
            (or lower if <guilabel>Increment</guilabel> is negative) bound for
            the <guilabel>Index</guilabel>.</para> <variablelist>
                <varlistentry>
                  <term>Accepted Data Types</term>

                  <listitem>
                    <para>parameter</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Allowed Values</term>

                  <listitem>
                    <para>-∞ &lt; <guilabel>End</guilabel> &lt; ∞</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Default Value</term>

                  <listitem>
                    <para>10</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Required</term>

                  <listitem>
                    <para>yes</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>Interfaces</term>

                  <listitem>
                    <para>GUI, script</para>
                  </listitem>
                </varlistentry>
              </variablelist></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </refsection>

  <refsection>
    <title>GUI</title>

    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata align="center" contentdepth="100%"
                     fileref="files/images/Command_For_GUI.png" scalefit="1"
                     width="100%"/>
        </imageobject>
      </mediaobject>
    </screenshot>

    <para>The <guilabel>For</guilabel> command GUI panel contains fields for
    all of its parameters: <guilabel>Index</guilabel>,
    <guilabel>Start</guilabel>, <guilabel>Increment</guilabel>, and
    <guilabel>End</guilabel>. To edit the values, click the field value you
    wish to change and type the new value (e.g. <userinput>5</userinput>,
    <userinput>anArray(1,5)</userinput>, or
    <userinput>Spacecraft.X</userinput>). Alternately, you can either
    right-click the field value or click the ellipses (<guilabel>…</guilabel>)
    button to the left of the field. This displays the
    <guilabel>ParameterSelectDialog</guilabel> window, which allows you to
    choose a parameter from a list.</para>

    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata align="center" contentdepth="100%"
                     fileref="files/images/Command_For_GUI_2.png" scalefit="1"
                     width="100%"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </refsection>

  <refsection>
    <title>Remarks</title>

    <para>The values of the <guilabel>Index</guilabel>,
    <guilabel>Start</guilabel>, <guilabel>Increment</guilabel>, and
    <guilabel>End</guilabel> parameters can be any of the following types:
    <itemizedlist>
        <listitem>
          <para>Literal numeric value (e.g. 1, 15.2, -6)</para>
        </listitem>

        <listitem>
          <para><guilabel>Variable</guilabel> resource</para>
        </listitem>

        <listitem>
          <para><guilabel>Array</guilabel> resource element</para>
        </listitem>

        <listitem>
          <para>Resource parameter of numeric type (e.g.
          <guilabel>Spacecraft</guilabel>.<guilabel>X</guilabel>,
          <guilabel>Thruster</guilabel>.<guilabel>K1</guilabel>)</para>
        </listitem>
      </itemizedlist></para>

    <para>The index specification cannot contain mathematical operators or
    parentheses. After execution of the <guilabel>For</guilabel> loop, the
    value of <guilabel>Index</guilabel> retains its value from the last loop
    iteration. If the loop does not execute, the value of
    <guilabel>Index</guilabel> remains equal to its value before the loop was
    encountered.</para>

    <para>Changes made to the index variable inside of a
    <guilabel>For</guilabel> loop are overwritten by the
    <guilabel>For</guilabel> loop statement. For example, the output from the
    following snippet:</para>

    <programlisting><code>For I = 1:1:3
    I = 100
    Report aReport I
EndFor</code></programlisting>

    <para>is:</para>

    <programlisting>100
100
100 </programlisting>

    <para>Changes made to the the <guilabel>Start</guilabel>,
    <guilabel>Increment</guilabel>, and <guilabel>End</guilabel> parameters
    made inside of a loop do not affect the behavior of the loop. For example,
    the output from the following snippet:</para>

    <programlisting><code>J = 2
K = 2
L = 8
For I = J:K:L
    J = 1
    K = 5
    L = 100
    Report aReport I
EndFor</code></programlisting>

    <para>is:</para>

    <programlisting>2
4
6
8   </programlisting>
  </refsection>

  <refsection>
    <title>Examples</title>

    <informalexample>
      <para>Propagate a spacecraft to apogee 3 times:</para>

      <programlisting><code>Create Spacecraft aSat
Create Propagator aPropagator
Create Variable I

BeginMissionSequence

For I = 1:1:3
    Propagate aPropagator(aSat, {aSat.Apoapsis})
EndFor</code></programlisting>
    </informalexample>

    <informalexample>
      <para>Index into an array:</para>

      <programlisting><code>Create Variable I J
Create Array anArray[10,5]
BeginMissionSequence

For I = 1:10
    For J = 1:5
        anArray(I,J) = I*J
    EndFor
EndFor</code></programlisting>
    </informalexample>
  </refsection>
</refentry>
